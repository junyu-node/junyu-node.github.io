{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"80e096fdc1cf912ee85dd9f7e6e77fd40cf60f10","modified":1466390414000},{"_id":"source/404.html","hash":"a7fd9eb291fa91642b26100294cc9fc76593e867","modified":1466347486000},{"_id":"source/favicon.ico","hash":"c54682e3359ec89e342537d2d9a0ec5d73a031f5","modified":1466134134000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1466390414000},{"_id":"themes/next/.javascript_ignore","hash":"d619ee13031908cd72666e4ff652d2ea3483b1c3","modified":1466390414000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1466390414000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1466390414000},{"_id":"themes/next/.gitignore","hash":"efec790f5b7a0256763e1cc08f12c4f0aff509f6","modified":1466390414000},{"_id":"themes/next/bower.json","hash":"f89c6700a11d81e067cc97273ca6bf96cb88c8f9","modified":1466390414000},{"_id":"themes/next/README.en.md","hash":"565ba52b3825b85a9f05b41183caca7f18b741d4","modified":1466390414000},{"_id":"themes/next/_config.yml","hash":"f94ebbfc0a50781fabda248128c7ced7f412753f","modified":1466405140000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1466390414000},{"_id":"themes/next/gulpfile.coffee","hash":"26e5b1b945704c8bc78b928feede895c4c111c95","modified":1466390414000},{"_id":"themes/next/package.json","hash":"63e9c0f1dd9e5d7f51b4ae383981ef939a2ed45d","modified":1466390414000},{"_id":"source/_posts/Hexo搭建Github静态博客.md","hash":"9e7fbde7f095d8cca459032ff56f4ff5ea1b96b2","modified":1466405769000},{"_id":"source/_posts/hexo换电脑.md","hash":"cac740bf9b111f5099d53ad1b4b434fdd2c7e1bc","modified":1466478817000},{"_id":"source/_posts/git简单应用.md","hash":"3f4639b741c2b36571a324ad26770c54d7ce49d4","modified":1466557736000},{"_id":"source/_posts/markdown.md","hash":"3e166242a6ce76ac09ce321a7bb5cda4b873da46","modified":1466392850000},{"_id":"source/_posts/regExp.md","hash":"3b83ce4ef4618be61f16fd1559b0385a11a35820","modified":1466417167000},{"_id":"source/about/index.md","hash":"a5b15fb6376d14c679be2c73ceb5dde904a5677b","modified":1466475981000},{"_id":"source/tags/index.md","hash":"90250d5da728305a72b0196ac7877e3e24a89f49","modified":1466392897000},{"_id":"source/search/index.md","hash":"7b250070ebc18c42e4974401ff6b9b571df73aca","modified":1466288443000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1466390414000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1466390295000},{"_id":"themes/next/.git/packed-refs","hash":"551ee209e3570739edd62c8d5ae62f3224efd3ef","modified":1466390414000},{"_id":"themes/next/.git/index","hash":"1afca8e04320be4fffd865595b9d84e02bed14a3","modified":1466426141000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1466390414000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1466390414000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1466390414000},{"_id":"themes/next/languages/fr-FR.yml","hash":"1a084623c39de74301f3e92f9388a3a815a542ca","modified":1466390414000},{"_id":"themes/next/languages/de.yml","hash":"786afba25cfc98845a20d9901823ebeebcd1cbbf","modified":1466390414000},{"_id":"themes/next/languages/id.yml","hash":"147c01e41b931085ad14250fa900c2249dcbbdd7","modified":1466390414000},{"_id":"themes/next/languages/en.yml","hash":"f03799cbdb5a33064ead080bcac4baca1f6bc5f9","modified":1466390414000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"bea452bc49aed171a210d09bd6cddc4e846ea8ab","modified":1466390414000},{"_id":"themes/next/languages/ja.yml","hash":"a2c7b6301b5474aab798946fb700289df237c3cf","modified":1466390414000},{"_id":"themes/next/languages/ru.yml","hash":"cc7b964a46587aea0e57b0a5269d8fd25570858e","modified":1466390414000},{"_id":"themes/next/languages/pt.yml","hash":"ca239b39bf65c9462e59d51b12f0fe566d453197","modified":1466390414000},{"_id":"themes/next/languages/zh-tw.yml","hash":"6b1f345aaefc13e6723dc8a6741b59ac05c20dfd","modified":1466390414000},{"_id":"themes/next/languages/zh-hk.yml","hash":"519ab3d817ec3bc5bfc91159c494b6b3c170bea7","modified":1466390414000},{"_id":"themes/next/layout/_layout.swig","hash":"74157f6cfd679ea11febec632542793f37c5e5d4","modified":1466390414000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1466390414000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1466390414000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1466390414000},{"_id":"themes/next/layout/page.swig","hash":"8019d02232a6dd1a665b6a4d2daef8e5dd2f0049","modified":1466390414000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1466390414000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1466390414000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1466390414000},{"_id":"themes/next/languages/default.yml","hash":"9db835c0543ade5a89bc80ec5a898203227cf3d8","modified":1466390414000},{"_id":"themes/next/test/.jshintrc","hash":"096ed6df627373edd820f24d46b8baf528dee61d","modified":1466390414000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1466390414000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1466390414000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1466390414000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1466390295000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1466390295000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1466390295000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1466390295000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1466390295000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1466390295000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1466390295000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1466390295000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1466390295000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1466390295000},{"_id":"themes/next/.git/logs/HEAD","hash":"4cecb9e38e6f5b6fd05e610bba65fd58a173a516","modified":1466390414000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"43c3433155ccd9abcbe7dce2e6bfa1f3a66af18b","modified":1466390414000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1466390414000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"b883289054ee54a374caad5d4883591beb94bd8b","modified":1466390414000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"85327c2174d09c6d69c9033592e6c8f7eb7ac3ba","modified":1466390414000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1466390414000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"b73f9443bee2d3ea383aad52e49ffca8aa97dcc2","modified":1466390414000},{"_id":"themes/next/layout/_partials/head.swig","hash":"6b0c495b8154ef8b2d2cb0a554e164ff22cdc962","modified":1466390414000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"0ce71d8322ea7dea82d9371fa2fe13949aa870e3","modified":1466390414000},{"_id":"themes/next/layout/_partials/header.swig","hash":"963a765dc00e6ac43cfc53ffaf5725eb854cf95e","modified":1466390414000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1466390414000},{"_id":"themes/next/layout/_partials/search.swig","hash":"011b9d6c9f0a2f4654908ea20b9391f9b7981271","modified":1466390414000},{"_id":"themes/next/layout/_macro/post.swig","hash":"1ca03011bed92614832b1343b65be92183957dc5","modified":1466390414000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1466390414000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1466390414000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"82d060fe055d6e423bbc9199f82dfe5c68e74779","modified":1466390414000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"0b91cadecead8e0b5211cc42b085998d94af503a","modified":1466390414000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1466390414000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"3acce36db0feb11a982c6c799aa6b6b47df2827c","modified":1466390414000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1466390414000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1466390414000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1466390414000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1466390414000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1466390414000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1466390414000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1466390414000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1466390414000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1466390414000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1466390414000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1466390414000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1466390414000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1466390414000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1466390414000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1466390414000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1466390414000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1466390414000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1466390414000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1466390414000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1466390414000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1466390414000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1466390414000},{"_id":"themes/next/.git/refs/heads/master","hash":"63bdb4b1050202aed5f0b321cbfb713619810d24","modified":1466390414000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1466390414000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1466390414000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1466390414000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1466390414000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"7ca5cb4daa58b3504e17f3e02975e794bc634658","modified":1466390414000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"c07f7b2f264e5215b8ed42d67e8cef2477558364","modified":1466390414000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1466390414000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1466390414000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1466390414000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"0a89c04055bade7baa5962f1d5aefe438d83a244","modified":1466390414000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1466390414000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1466390414000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1466390414000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"5bafc33f57508d1d04a9930165240f6e9efa8d6d","modified":1466390414000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"1561bd0c107d725252c6d746e9ac177fc18f93bf","modified":1466390414000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"907b931d775d32405d02a25b3b0a3ac03bf804d0","modified":1466390414000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1466390414000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1466390414000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1466390414000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"3ead77befa064d6327dc7afd0a5af7be59a5f196","modified":1466390414000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"17624186f7a1f28daddea258d044f8e03b2f4bea","modified":1466390414000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1466390414000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1466390414000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1466390414000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1466390414000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1466390414000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1466390414000},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1466390414000},{"_id":"themes/next/source/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1466390414000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1466390414000},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1466390414000},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1466390414000},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1466390414000},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1466390414000},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1466390414000},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"7da985a99674e54f514d4fd9fcd3bcea6e7e41d5","modified":1466390414000},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1466390414000},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1466390414000},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1466390414000},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1466390414000},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1466390414000},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1466390414000},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1466390414000},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1466390414000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1466390414000},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1466390414000},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1466390414000},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1466390414000},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1466390414000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1466390414000},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1466390414000},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1466390414000},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1466390414000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"4cecb9e38e6f5b6fd05e610bba65fd58a173a516","modified":1466390414000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1466390414000},{"_id":"themes/next/.git/objects/pack/pack-4f312486fe3062dc3e13682eb7ac534e03e32d47.idx","hash":"a03d21d613160f82694ca082c1eb0794bde94043","modified":1466390414000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"f9c6ee91c2a615edd8ca26edcc8a66b71883c238","modified":1466390414000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1466390414000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"7c43d66da93cde65b473a7d6db2a86f9a42647d6","modified":1466390414000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"bff3b18f56175c53f3bc6d733166c4d998e08732","modified":1466390414000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1466390414000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1466390414000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1466390414000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"8c7af79407d223486fba72b8150fe045a553bf70","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1466390414000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1466390414000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1466390414000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1466390414000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1466390414000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1466390414000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"4303776991ef28f5742ca51c7dffe6f12f0acf34","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"c2c6c4f6434b4f94aac2af5861cd769427f0ee10","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"be22ad34f546a07f6d56b424338cdd898683eea4","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"8d7cecde4933900c7df2db9d0a98f5f82f88dc93","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"938d39eedc6e3d33918c1145a5bf1e79991d3fcf","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d4b7bd610ca03dbb2f5b66631c0e84a79fb4660b","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"1b10ba2d3ad0c063c418dc94a0b7e0db4b342c53","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"d09280e5b79f3b573edb30f30c7a5f03ac640986","modified":1466390414000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1466390414000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1466390414000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"6ed60cc621bac096c0ed7534fa25b1a52dc571d4","modified":1466390414000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1466390414000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1466390414000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1466390414000},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1466390414000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1466390414000},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1466390414000},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1466390414000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1466390414000},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1466390414000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1466390414000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1466390414000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1466390414000},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1466390414000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1466390414000},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1466390414000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1466390414000},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1466390414000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"4cecb9e38e6f5b6fd05e610bba65fd58a173a516","modified":1466390414000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1466390414000},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4da051c7f3924fa2db1e73c55b2baf1c2c150255","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"90f8f9706cd7fe829cf06e9959a65fd3f8b994fa","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"3c46efd6601e268093ce6d7b1471d18501878f0d","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"15063d79b5befc21820baf05d6f20cc1c1787477","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d543d1377c1f61b70e3adb6da0eb12797552e5f2","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"cbca4842a54950e2934b3b8f3cd940f122111aef","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"4eb18b12fa0ea6c35925d9a64f64e2a7dae8c7fd","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8e66c2635d48e11de616bb29c4b1323698eebc0a","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"795d94561888d31cb7a6ff4a125596809ea69b7d","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"3afc459442c132c480d1d832f1a872f1070bb048","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1466390414000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"618f73450cf541f88a4fddc3d22898aee49d105d","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1466390414000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1466390414000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1466390414000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1466390414000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1466390414000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1466390414000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1466390414000},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1466390414000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1466390414000},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1466390414000},{"_id":"themes/next/.git/objects/pack/pack-4f312486fe3062dc3e13682eb7ac534e03e32d47.pack","hash":"61532e954b68cdae48925a089f83f8f7127930df","modified":1466390414000},{"_id":"public/404.html","hash":"1d903f3e44532822eb2871be0998b3694915682d","modified":1466559053540},{"_id":"public/about/index.html","hash":"b5711db4cec3823528d75894a57e2047c5e47508","modified":1466559053540},{"_id":"public/tags/index.html","hash":"f1dda3e3a6d2c62941a35a302f3c0090ccf871d2","modified":1466559053541},{"_id":"public/search/index.html","hash":"d9daa3916f7298a0808f349174008df81f10559b","modified":1466559053541},{"_id":"public/archives/index.html","hash":"8465a17fff42226342ec88973f1a3c406fed3a7e","modified":1466559053541},{"_id":"public/archives/2016/index.html","hash":"3012d0ae1e8f35fc68f2f99f2e01570febb87e2d","modified":1466559053541},{"_id":"public/archives/2016/06/index.html","hash":"a6d7721ca073f0d7991d4b1d8f65a2ee73332898","modified":1466559053541},{"_id":"public/tags/hexo/index.html","hash":"23939a59c04b82c98f9659ae598fd722f2376a50","modified":1466559053541},{"_id":"public/tags/git/index.html","hash":"9f2160afd71c6b0113a55680c1b516a454bfc853","modified":1466559053541},{"_id":"public/tags/js/index.html","hash":"2ce9f54e95a607d5c1dbd10220d766048ebec434","modified":1466559053541},{"_id":"public/tags/markdown/index.html","hash":"b8d90841531dbdcb9ad155223972be40802bff22","modified":1466559053541},{"_id":"public/tags/regRxp/index.html","hash":"821613f83b2f063fae8d67b5f4047f32f9ff839a","modified":1466559053541},{"_id":"public/tags/正则/index.html","hash":"7217dc08a75d9c7ecb1a0b4a53ea13e53d1d7521","modified":1466559053541},{"_id":"public/git简单应用/index.html","hash":"af8e760d1a7d72440d02f4fd9733e0264cab1c7c","modified":1466559053541},{"_id":"public/hexo换电脑/index.html","hash":"408000854dae8747c0e454c0ec256dc2f54f5f9c","modified":1466559053541},{"_id":"public/regExp/index.html","hash":"0a43538737496c6cf0da790f34edfd68ef7d0791","modified":1466559053541},{"_id":"public/Hexo搭建Github静态博客/index.html","hash":"a853dee638258940ac31324ffcde68df97ee5493","modified":1466559053542},{"_id":"public/markdown/index.html","hash":"98591d100237a5e955dddba040b4f1a534311b7a","modified":1466559053542},{"_id":"public/index.html","hash":"b925438b7c9eafe05e0361baf353b8f39658da00","modified":1466559053542},{"_id":"public/favicon.ico","hash":"c54682e3359ec89e342537d2d9a0ec5d73a031f5","modified":1466559053554},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1466559053554},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1466559053554},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1466559053555},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1466559053556},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1466559053556},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1466559053556},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1466559053556},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1466559053556},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1466559053556},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1466559053556},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1466559053556},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1466559053556},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1466559053556},{"_id":"public/vendors/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1466559053556},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"69a4c537d167b68a0ccf1c6febd138aeffca60d6","modified":1466559053556},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1466559053557},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1466559053557},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1466559053557},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1466559053557},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1466559053557},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1466559053557},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1466559053557},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1466559053557},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1466559053557},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1466559054757},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1466559054766},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1466559054768},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1466559054779},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1466559054779},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1466559054779},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1466559054779},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1466559054779},{"_id":"public/js/src/utils.js","hash":"e5cb720894c4bc28ca8f10b33df127fb394018d9","modified":1466559054779},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1466559054779},{"_id":"public/vendors/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1466559054779},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1466559054779},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1466559054779},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1466559054779},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1466559054779},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1466559054779},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1466559054779},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1466559054780},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1466559054780},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1466559054780},{"_id":"public/js/src/schemes/pisces.js","hash":"7506e7490c69a200831393c38d25e91c156bd471","modified":1466559054780},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1466559054780},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1466559054780},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1466559054780},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1466559054780},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1466559054780},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1466559054780},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1466559054780},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1466559054780},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1466559054781},{"_id":"public/css/main.css","hash":"92ef6c21f1867acf921e8657f8568c0f24f5ccc3","modified":1466559054781},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1466559054781},{"_id":"public/vendors/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1466559054781},{"_id":"public/vendors/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1466559054781},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1466559054781},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1466559054781},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1466559054781},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1466559054781},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1466559054781},{"_id":"public/vendors/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1466559054781},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1466559054781},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"2b3c8ba7008cc014d8fb37abc6f9f49aeda83824","modified":1466559054803}],"Category":[],"Data":[],"Page":[{"layout":"default","comments":0,"_content":"<html>\n<head>\n    <meta charset=\"UTF-8\" />\n    <title>404</title>\n</head>\n<body>\n    <h2 style=\"font-size:22px;\">您找的页面走失了...</h2>\n</body>\n</html>","source":"404.html","raw":"---\nlayout: default\ncomments: false\n---\n<html>\n<head>\n    <meta charset=\"UTF-8\" />\n    <title>404</title>\n</head>\n<body>\n    <h2 style=\"font-size:22px;\">您找的页面走失了...</h2>\n</body>\n</html>","date":"2016-06-19T14:44:46.000Z","updated":"2016-06-19T14:44:46.000Z","path":"404.html","title":"","_id":"cipq7e5kz0000g6u049mj5me7","content":"<html>\n<head>\n    <meta charset=\"UTF-8\">\n    <title>404</title>\n</head>\n<body>\n    <h2 style=\"font-size:22px;\">您找的页面走失了...</h2>\n</body>\n</html>","excerpt":"","more":"<html>\n<head>\n    <meta charset=\"UTF-8\" />\n    <title>404</title>\n</head>\n<body>\n    <h2 style=\"font-size:22px;\">您找的页面走失了...</h2>\n</body>\n</html>"},{"title":"贾畯嵎的简介","date":"2016-06-21T02:26:21.000Z","comments":0,"_content":"贾畯嵎的简介\n===========\n<ul style=\"overflow:hidden\">\n    <li style=\"float:left;width:50%;\"><b>姓名:</b> 贾畯嵎(junyu) </li><li style=\"float:left;width:50%;\"><b>性别:</b> 男</li><li style=\"float:left;width:50%;\"><b>出生年月:</b> 19890924</li><li style=\"float:left;width:50%;\"><b>籍贯:</b> 河北张家口怀来县</li><li style=\"float:left;width:50%;\"><b>学历:</b> 大专</li><li style=\"float:left;width:50%;\"><b>婚姻状况:</b> 未婚</li>\n</ul>\n\n","source":"about/index.md","raw":"---\ntitle: 贾畯嵎的简介\ndate:\ncomments: false\n---\n贾畯嵎的简介\n===========\n<ul style=\"overflow:hidden\">\n    <li style=\"float:left;width:50%;\"><b>姓名:</b> 贾畯嵎(junyu) </li><li style=\"float:left;width:50%;\"><b>性别:</b> 男</li><li style=\"float:left;width:50%;\"><b>出生年月:</b> 19890924</li><li style=\"float:left;width:50%;\"><b>籍贯:</b> 河北张家口怀来县</li><li style=\"float:left;width:50%;\"><b>学历:</b> 大专</li><li style=\"float:left;width:50%;\"><b>婚姻状况:</b> 未婚</li>\n</ul>\n\n","updated":"2016-06-21T02:26:21.000Z","path":"about/index.html","layout":"page","_id":"cipq7e5o40002g6u09zfynomp","content":"<h1 id=\"贾畯嵎的简介\"><a href=\"#贾畯嵎的简介\" class=\"headerlink\" title=\"贾畯嵎的简介\"></a>贾畯嵎的简介</h1><ul style=\"overflow:hidden\"><br>    <li style=\"float:left;width:50%;\"><b>姓名:</b> 贾畯嵎(junyu) </li><li style=\"float:left;width:50%;\"><b>性别:</b> 男</li><li style=\"float:left;width:50%;\"><b>出生年月:</b> 19890924</li><li style=\"float:left;width:50%;\"><b>籍贯:</b> 河北张家口怀来县</li><li style=\"float:left;width:50%;\"><b>学历:</b> 大专</li><li style=\"float:left;width:50%;\"><b>婚姻状况:</b> 未婚</li><br></ul>\n\n","excerpt":"","more":"<h1 id=\"贾畯嵎的简介\"><a href=\"#贾畯嵎的简介\" class=\"headerlink\" title=\"贾畯嵎的简介\"></a>贾畯嵎的简介</h1><ul style=\"overflow:hidden\"><br>    <li style=\"float:left;width:50%;\"><b>姓名:</b> 贾畯嵎(junyu) </li><li style=\"float:left;width:50%;\"><b>性别:</b> 男</li><li style=\"float:left;width:50%;\"><b>出生年月:</b> 19890924</li><li style=\"float:left;width:50%;\"><b>籍贯:</b> 河北张家口怀来县</li><li style=\"float:left;width:50%;\"><b>学历:</b> 大专</li><li style=\"float:left;width:50%;\"><b>婚姻状况:</b> 未婚</li><br></ul>\n\n"},{"title":"tags","date":"2016-06-20T03:13:13.000Z","type":"tags","comments":0,"_content":"\n","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2016-06-20 11:13:13\ntype: tags\ncomments: false\n---\n\n","updated":"2016-06-20T03:21:37.000Z","path":"tags/index.html","layout":"page","_id":"cipq7e5og0004g6u07dgte5tm","content":"","excerpt":"","more":""},{"layout":"search","title":"RESULT","toc":false,"comments":0,"_content":"<div id=\"st-results-container\" class=\"st-results-container\"></div>","source":"search/index.md","raw":"layout: search\ntitle: RESULT\ntoc: false\ncomments: false\n----\n<div id=\"st-results-container\" class=\"st-results-container\"></div>","date":"2016-06-18T22:23:44.000Z","updated":"2016-06-18T22:20:43.000Z","path":"search/index.html","_id":"cipq7e5os0007g6u0euzwq6mx","content":"<div id=\"st-results-container\" class=\"st-results-container\"></div>","excerpt":"","more":"<div id=\"st-results-container\" class=\"st-results-container\"></div>"}],"Post":[{"title":"Hexo搭建Github静态博客","date":"2016-06-18T22:52:38.000Z","comments":1,"type":"tags","_content":"通过一些文章自己搭建hexo 并且掉的一些坑\n\n<!-- more -->\n\n一环境\n============\n    1. 安装git\n--------\n    2. 安装node\n--------\n\n\n二 配置Github\n==============\n\n    1. 建立Repository\n------------\n建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】\n比如的自己的git用户名叫junyu-node 仓库名字必须为 junyu-node.github.io\n\n    2. 配置SSH-Key\n--------\n2.1\n在Git Bash输入以下指令（任意位置点击鼠标右键），检查是否已经存在了SSH keys。\n```\nls -al ~/.ssh\n```\n2.2\n输入以下指令（邮箱就是你注册Github时候的邮箱）后，回车：\n```\nssh-keygen -t rsa -C \"angelen10@163.com\"\n```\n2.3\n然后它会提示要你输入passphrase（如上图，我没有输入直接回车，如果你输入的话，要记得，到时候会用到）。\n2.4\n然后键入以下指令：\n```\nssh-agent -s\n```\n2.5\n继续输入指令：\n```\nssh-add ~/.ssh/id_rsa\n```\n输入之后，在我这里是出错了，不知道你的有没有出错。\n\n如果你的也是这样子出错了的话，就输入以下指令：\n```\neval `ssh-agent -s`\nssh-add\n```\n\n到了这一步，就可以添加SSH key到你的Github账户了。键入以下指令，拷贝Key（先拷贝了，等一下可以直接粘贴）：\n```\nclip < ~/.ssh/id_rsa.pub\n```\n2.6\n然后到Github里面 然后点击 settings\n左边导航有个 SSH and GPG keys 点击 进去\n然后 点击  New SSH key 设置一个名字 然后粘贴进去 保存即可\n\n-------------\n详情请参考[史上最详细“截图”搭建Hexo博客并部署到Github](http://jingyan.baidu.com/article/d8072ac47aca0fec95cefd2d.html)\n\n三 安装Hexo\n========\n   1. Installation\n------------------------\n```\nnpm install -g hexo\n```\n\n\n   2. 在电脑中建立一个名字叫「Hexo」的文件夹，然后在此文件夹中右键打开Git Bash。\n------------------------\n\n初始化 hexo\n```\nhexo init\n```\n成功会出现\n```\n[info] Copying data\n[info] You are almost done! Don't forget to run `npm install` before you start b\nlogging with Hexo!\n```\nHexo随后会自动在目标文件夹建立网站所需要的文件。然后按照提示，运行 npm install（在 /D/Hexo下）\n```\nnpm install\n```\n会在D:\\Hexo目录中安装 node_modules。\n\n 3.起服务 测试 start the server\n\n --------\n ```\n $ hexo server\n ```\n [info] Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.\n\n 表明Hexo Server已经启动了，在浏览器中打开 http://localhost:4000/，这时可以看到Hexo已为你生成了一篇blog。\n\n 你可以按Ctrl+C 停止Server\n\n 4. 创建一个新的页 Create a new post\n --------------\n ```\n $ hexo new \"My New Post\"\n ```\n [info] File created at d:\\Hexo\\source\\_posts\\My-New-Post.md\n\n 刷新 (localhost:4000/)，可以发现已生成了一篇新文章 \"My New Post\"。\n\n <p style=\"color:#f00\">\n 有一个问题，发现 \"My New Post\" 被发了2遍，在Hexo server所在的git bash窗口也能看到create了2次。\n 经验证，在hexo new \"My New Post\" 时，如果按Ctrl+C将hexo server停掉，就不会出现发2次的问题了。\n\n 所以，在hexo new文章时，需要stop server。\n\n </p>\n\n\n 5 Generate static files\n --------------\n执行下面的命令，将markdown文件生成静态网页。\n```\n$ hexo generate\n```\n该命令执行完后，会在 D:\\Hexo\\public\\ 目录下生成一系列html，css等文件\n\n\n6.编辑文章\n-----------------\nhexo new \"My New Post\"会在D:\\Hexo\\source\\_posts目录下生成一个markdown文件：My-New-Post.md\n\n可以使用一个支持markdown语法的编辑器（比如 Sublime Text 2）来编辑该文件。\n\n 7.部署到Github\n  ------------\n  部署到Github前需要配置_config.yml文件，首先找到下面的内容\n\n  deploy:\n    type: git\n    repository: https://github.com/junyu-node/junyu-node.github.io.git\n    branch: master\n\n<p style=\"color:#f00\">\n    配置冒号后边必须有空格\n     hexo 3.0 type 需要配置成git 其他的配置成github\n     ```\n     npm install hexo-deployer-git --save\n     ```\n</p>\n8. 测试\n------------\n\n当部署完成后，在浏览器中打开http://junyu-node.github.io/（https://junyu-node.github.io/） ，正常显示网页，表明部署成功。\n\n9. 总结：部署步骤\n------------------\n\n每次部署的步骤，可按以下三步来进行。\n```\nhexo clean\nhexo generate\nhexo deploy\n```\n\n10. 总结：本地调试\n--------------------\n\n1. 在执行下面的命令后，\n```\n$ hexo g #生成\n$ hexo s #启动本地服务，进行文章预览调试\n```\n浏览器输入http://localhost:4000，查看搭建效果。此后的每次变更_config.yml 文件或者新建文件都可以先用此命令调试，尤其是当你想调试新添加的主题时。\n\n2. 可以用简化的一条命令\n```\nhexo s -g\n```\n11 命令总结\n-------------\n 11.1常用命令\n\n<pre>\nhexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成静态页面至public目录\nhexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\nhexo deploy #将.deploy目录部署到GitHub\nhexo help  # 查看帮助\nhexo version  #查看Hexo的版本\n</pre>\n\n11.2复合命令\n\n<pre>\nhexo deploy -g  #生成加部署\nhexo server -g  #生成加预览\n</pre>\n命令的简写为：\n<pre>\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n</pre>\n\n四 配置 主题 和一些功能\n==================\n\n1 主题\n---------\n\n我安装的主题是next,[next](http://theme-next.iissnan.com/getting-started.html)\n1.1在你的根目录下下载主题\n\n```\ngit clone https://github.com/iissnan/hexo-theme-next themes/next\n\n\n```\n\n1.2 在hexo/_config.yml 里边搜索\n\n<pre>\n    theme: next\n</pre>\n\n1.3语言设置\n<pre>\n    language: zh-Hans\n</pre>\n1.4主题设定\nhexo/themes/next/_config.yml 里边搜索 scheme\n<pre>\n    #scheme: Muse\n    #scheme: Mist\n    scheme: Pisces\n</pre>\n1.5设置 菜单\n<pre>\nmenu:\n  home: /\n  archives: /archives\n  #about: /about\n  #categories: /categories\n  tags: /tags\n  #commonweal: /404.html\n</pre>\n\n2多说评论\n--------\n\niissnan-notes 为多说的域名\n<pre>\nduoshuo_shortname: iissnan-notes\n</pre>\n\n3.搜索服务[Swiftype](https://swiftype.com/) 站内搜索\n------------------\n\nxxx的值为 图片涂灰的部分\nswiftype_key: xxxxxxxxx\n\n4百度统计\n---------------------\n\n<pre>\n    baidu_analytics:\n</pre>\n\n\n五 参考文档 网址\n================\n\n1.[Hexo搭建Github静态博客](http://www.cnblogs.com/zhcncn/p/4097881.html)\n2.[站内搜索](https://swiftype.com/)\n3.[next主题](http://theme-next.iissnan.com/)\n\n\n\n\n\n\n","source":"_posts/Hexo搭建Github静态博客.md","raw":"---\ntitle: Hexo搭建Github静态博客\ndate: 2016-06-19 06:52:38\ntags: [hexo]\ncomments: true\ntype: \"tags\"\n---\n通过一些文章自己搭建hexo 并且掉的一些坑\n\n<!-- more -->\n\n一环境\n============\n    1. 安装git\n--------\n    2. 安装node\n--------\n\n\n二 配置Github\n==============\n\n    1. 建立Repository\n------------\n建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】\n比如的自己的git用户名叫junyu-node 仓库名字必须为 junyu-node.github.io\n\n    2. 配置SSH-Key\n--------\n2.1\n在Git Bash输入以下指令（任意位置点击鼠标右键），检查是否已经存在了SSH keys。\n```\nls -al ~/.ssh\n```\n2.2\n输入以下指令（邮箱就是你注册Github时候的邮箱）后，回车：\n```\nssh-keygen -t rsa -C \"angelen10@163.com\"\n```\n2.3\n然后它会提示要你输入passphrase（如上图，我没有输入直接回车，如果你输入的话，要记得，到时候会用到）。\n2.4\n然后键入以下指令：\n```\nssh-agent -s\n```\n2.5\n继续输入指令：\n```\nssh-add ~/.ssh/id_rsa\n```\n输入之后，在我这里是出错了，不知道你的有没有出错。\n\n如果你的也是这样子出错了的话，就输入以下指令：\n```\neval `ssh-agent -s`\nssh-add\n```\n\n到了这一步，就可以添加SSH key到你的Github账户了。键入以下指令，拷贝Key（先拷贝了，等一下可以直接粘贴）：\n```\nclip < ~/.ssh/id_rsa.pub\n```\n2.6\n然后到Github里面 然后点击 settings\n左边导航有个 SSH and GPG keys 点击 进去\n然后 点击  New SSH key 设置一个名字 然后粘贴进去 保存即可\n\n-------------\n详情请参考[史上最详细“截图”搭建Hexo博客并部署到Github](http://jingyan.baidu.com/article/d8072ac47aca0fec95cefd2d.html)\n\n三 安装Hexo\n========\n   1. Installation\n------------------------\n```\nnpm install -g hexo\n```\n\n\n   2. 在电脑中建立一个名字叫「Hexo」的文件夹，然后在此文件夹中右键打开Git Bash。\n------------------------\n\n初始化 hexo\n```\nhexo init\n```\n成功会出现\n```\n[info] Copying data\n[info] You are almost done! Don't forget to run `npm install` before you start b\nlogging with Hexo!\n```\nHexo随后会自动在目标文件夹建立网站所需要的文件。然后按照提示，运行 npm install（在 /D/Hexo下）\n```\nnpm install\n```\n会在D:\\Hexo目录中安装 node_modules。\n\n 3.起服务 测试 start the server\n\n --------\n ```\n $ hexo server\n ```\n [info] Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.\n\n 表明Hexo Server已经启动了，在浏览器中打开 http://localhost:4000/，这时可以看到Hexo已为你生成了一篇blog。\n\n 你可以按Ctrl+C 停止Server\n\n 4. 创建一个新的页 Create a new post\n --------------\n ```\n $ hexo new \"My New Post\"\n ```\n [info] File created at d:\\Hexo\\source\\_posts\\My-New-Post.md\n\n 刷新 (localhost:4000/)，可以发现已生成了一篇新文章 \"My New Post\"。\n\n <p style=\"color:#f00\">\n 有一个问题，发现 \"My New Post\" 被发了2遍，在Hexo server所在的git bash窗口也能看到create了2次。\n 经验证，在hexo new \"My New Post\" 时，如果按Ctrl+C将hexo server停掉，就不会出现发2次的问题了。\n\n 所以，在hexo new文章时，需要stop server。\n\n </p>\n\n\n 5 Generate static files\n --------------\n执行下面的命令，将markdown文件生成静态网页。\n```\n$ hexo generate\n```\n该命令执行完后，会在 D:\\Hexo\\public\\ 目录下生成一系列html，css等文件\n\n\n6.编辑文章\n-----------------\nhexo new \"My New Post\"会在D:\\Hexo\\source\\_posts目录下生成一个markdown文件：My-New-Post.md\n\n可以使用一个支持markdown语法的编辑器（比如 Sublime Text 2）来编辑该文件。\n\n 7.部署到Github\n  ------------\n  部署到Github前需要配置_config.yml文件，首先找到下面的内容\n\n  deploy:\n    type: git\n    repository: https://github.com/junyu-node/junyu-node.github.io.git\n    branch: master\n\n<p style=\"color:#f00\">\n    配置冒号后边必须有空格\n     hexo 3.0 type 需要配置成git 其他的配置成github\n     ```\n     npm install hexo-deployer-git --save\n     ```\n</p>\n8. 测试\n------------\n\n当部署完成后，在浏览器中打开http://junyu-node.github.io/（https://junyu-node.github.io/） ，正常显示网页，表明部署成功。\n\n9. 总结：部署步骤\n------------------\n\n每次部署的步骤，可按以下三步来进行。\n```\nhexo clean\nhexo generate\nhexo deploy\n```\n\n10. 总结：本地调试\n--------------------\n\n1. 在执行下面的命令后，\n```\n$ hexo g #生成\n$ hexo s #启动本地服务，进行文章预览调试\n```\n浏览器输入http://localhost:4000，查看搭建效果。此后的每次变更_config.yml 文件或者新建文件都可以先用此命令调试，尤其是当你想调试新添加的主题时。\n\n2. 可以用简化的一条命令\n```\nhexo s -g\n```\n11 命令总结\n-------------\n 11.1常用命令\n\n<pre>\nhexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成静态页面至public目录\nhexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\nhexo deploy #将.deploy目录部署到GitHub\nhexo help  # 查看帮助\nhexo version  #查看Hexo的版本\n</pre>\n\n11.2复合命令\n\n<pre>\nhexo deploy -g  #生成加部署\nhexo server -g  #生成加预览\n</pre>\n命令的简写为：\n<pre>\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n</pre>\n\n四 配置 主题 和一些功能\n==================\n\n1 主题\n---------\n\n我安装的主题是next,[next](http://theme-next.iissnan.com/getting-started.html)\n1.1在你的根目录下下载主题\n\n```\ngit clone https://github.com/iissnan/hexo-theme-next themes/next\n\n\n```\n\n1.2 在hexo/_config.yml 里边搜索\n\n<pre>\n    theme: next\n</pre>\n\n1.3语言设置\n<pre>\n    language: zh-Hans\n</pre>\n1.4主题设定\nhexo/themes/next/_config.yml 里边搜索 scheme\n<pre>\n    #scheme: Muse\n    #scheme: Mist\n    scheme: Pisces\n</pre>\n1.5设置 菜单\n<pre>\nmenu:\n  home: /\n  archives: /archives\n  #about: /about\n  #categories: /categories\n  tags: /tags\n  #commonweal: /404.html\n</pre>\n\n2多说评论\n--------\n\niissnan-notes 为多说的域名\n<pre>\nduoshuo_shortname: iissnan-notes\n</pre>\n\n3.搜索服务[Swiftype](https://swiftype.com/) 站内搜索\n------------------\n\nxxx的值为 图片涂灰的部分\nswiftype_key: xxxxxxxxx\n\n4百度统计\n---------------------\n\n<pre>\n    baidu_analytics:\n</pre>\n\n\n五 参考文档 网址\n================\n\n1.[Hexo搭建Github静态博客](http://www.cnblogs.com/zhcncn/p/4097881.html)\n2.[站内搜索](https://swiftype.com/)\n3.[next主题](http://theme-next.iissnan.com/)\n\n\n\n\n\n\n","slug":"Hexo搭建Github静态博客","published":1,"updated":"2016-06-20T06:56:09.000Z","layout":"post","photos":[],"link":"","_id":"cipq7e5nw0001g6u0khyojmyq","content":"<p>通过一些文章自己搭建hexo 并且掉的一些坑</p>\n<a id=\"more\"></a>\n<h1 id=\"一环境\"><a href=\"#一环境\" class=\"headerlink\" title=\"一环境\"></a>一环境</h1><pre><code>1. 安装git\n</code></pre><hr>\n<pre><code>2. 安装node\n</code></pre><hr>\n<h1 id=\"二-配置Github\"><a href=\"#二-配置Github\" class=\"headerlink\" title=\"二 配置Github\"></a>二 配置Github</h1><pre><code>1. 建立Repository\n</code></pre><hr>\n<p>建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】<br>比如的自己的git用户名叫junyu-node 仓库名字必须为 junyu-node.github.io</p>\n<pre><code>2. 配置SSH-Key\n</code></pre><hr>\n<p>2.1<br>在Git Bash输入以下指令（任意位置点击鼠标右键），检查是否已经存在了SSH keys。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -al ~/.ssh</span><br></pre></td></tr></table></figure></p>\n<p>2.2<br>输入以下指令（邮箱就是你注册Github时候的邮箱）后，回车：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;angelen10@163.com&quot;</span><br></pre></td></tr></table></figure></p>\n<p>2.3<br>然后它会提示要你输入passphrase（如上图，我没有输入直接回车，如果你输入的话，要记得，到时候会用到）。<br>2.4<br>然后键入以下指令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-agent -s</span><br></pre></td></tr></table></figure></p>\n<p>2.5<br>继续输入指令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure></p>\n<p>输入之后，在我这里是出错了，不知道你的有没有出错。</p>\n<p>如果你的也是这样子出错了的话，就输入以下指令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eval `ssh-agent -s`</span><br><span class=\"line\">ssh-add</span><br></pre></td></tr></table></figure></p>\n<p>到了这一步，就可以添加SSH key到你的Github账户了。键入以下指令，拷贝Key（先拷贝了，等一下可以直接粘贴）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clip &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></p>\n<p>2.6<br>然后到Github里面 然后点击 settings<br>左边导航有个 SSH and GPG keys 点击 进去<br>然后 点击  New SSH key 设置一个名字 然后粘贴进去 保存即可</p>\n<hr>\n<p>详情请参考<a href=\"http://jingyan.baidu.com/article/d8072ac47aca0fec95cefd2d.html\" target=\"_blank\" rel=\"external\">史上最详细“截图”搭建Hexo博客并部署到Github</a></p>\n<h1 id=\"三-安装Hexo\"><a href=\"#三-安装Hexo\" class=\"headerlink\" title=\"三 安装Hexo\"></a>三 安装Hexo</h1><h2 id=\"1-Installation\"><a href=\"#1-Installation\" class=\"headerlink\" title=\"   1. Installation\"></a>   1. Installation</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-在电脑中建立一个名字叫「Hexo」的文件夹，然后在此文件夹中右键打开Git-Bash。\"><a href=\"#2-在电脑中建立一个名字叫「Hexo」的文件夹，然后在此文件夹中右键打开Git-Bash。\" class=\"headerlink\" title=\"   2. 在电脑中建立一个名字叫「Hexo」的文件夹，然后在此文件夹中右键打开Git Bash。\"></a>   2. 在电脑中建立一个名字叫「Hexo」的文件夹，然后在此文件夹中右键打开Git Bash。</h2><p>初始化 hexo<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure></p>\n<p>成功会出现<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[info] Copying data</span><br><span class=\"line\">[info] You are almost done! Don&apos;t forget to run `npm install` before you start b</span><br><span class=\"line\">logging with Hexo!</span><br></pre></td></tr></table></figure></p>\n<p>Hexo随后会自动在目标文件夹建立网站所需要的文件。然后按照提示，运行 npm install（在 /D/Hexo下）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure></p>\n<p>会在D:\\Hexo目录中安装 node_modules。</p>\n<p> 3.起服务 测试 start the server</p>\n<hr>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p> [info] Hexo is running at <a href=\"http://localhost:4000/\" target=\"_blank\" rel=\"external\">http://localhost:4000/</a>. Press Ctrl+C to stop.</p>\n<p> 表明Hexo Server已经启动了，在浏览器中打开 <a href=\"http://localhost:4000/，这时可以看到Hexo已为你生成了一篇blog。\" target=\"_blank\" rel=\"external\">http://localhost:4000/，这时可以看到Hexo已为你生成了一篇blog。</a></p>\n<p> 你可以按Ctrl+C 停止Server</p>\n<h2 id=\"4-创建一个新的页-Create-a-new-post\"><a href=\"#4-创建一个新的页-Create-a-new-post\" class=\"headerlink\" title=\" 4. 创建一个新的页 Create a new post\"></a> 4. 创建一个新的页 Create a new post</h2> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new &quot;My New Post&quot;</span><br></pre></td></tr></table></figure>\n<p> [info] File created at d:\\Hexo\\source_posts\\My-New-Post.md</p>\n<p> 刷新 (localhost:4000/)，可以发现已生成了一篇新文章 “My New Post”。</p>\n <p style=\"color:#f00\"><br> 有一个问题，发现 “My New Post” 被发了2遍，在Hexo server所在的git bash窗口也能看到create了2次。<br> 经验证，在hexo new “My New Post” 时，如果按Ctrl+C将hexo server停掉，就不会出现发2次的问题了。<br><br> 所以，在hexo new文章时，需要stop server。<br><br> </p>\n\n\n<h2 id=\"5-Generate-static-files\"><a href=\"#5-Generate-static-files\" class=\"headerlink\" title=\" 5 Generate static files\"></a> 5 Generate static files</h2><p>执行下面的命令，将markdown文件生成静态网页。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure></p>\n<p>该命令执行完后，会在 D:\\Hexo\\public\\ 目录下生成一系列html，css等文件</p>\n<h2 id=\"6-编辑文章\"><a href=\"#6-编辑文章\" class=\"headerlink\" title=\"6.编辑文章\"></a>6.编辑文章</h2><p>hexo new “My New Post”会在D:\\Hexo\\source_posts目录下生成一个markdown文件：My-New-Post.md</p>\n<p>可以使用一个支持markdown语法的编辑器（比如 Sublime Text 2）来编辑该文件。</p>\n<h2 id=\"7-部署到Github\"><a href=\"#7-部署到Github\" class=\"headerlink\" title=\" 7.部署到Github\"></a> 7.部署到Github</h2><p>  部署到Github前需要配置_config.yml文件，首先找到下面的内容</p>\n<p>  deploy:<br>    type: git<br>    repository: <a href=\"https://github.com/junyu-node/junyu-node.github.io.git\" target=\"_blank\" rel=\"external\">https://github.com/junyu-node/junyu-node.github.io.git</a><br>    branch: master</p>\n<p></p><p style=\"color:#f00\"><br>    配置冒号后边必须有空格<br>     hexo 3.0 type 需要配置成git 其他的配置成github<br>     <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p>\n<p></p><p></p>\n<h2 id=\"8-测试\"><a href=\"#8-测试\" class=\"headerlink\" title=\"8. 测试\"></a>8. 测试</h2><p>当部署完成后，在浏览器中打开<a href=\"http://junyu-node.github.io/（https://junyu-node.github.io/）\">http://junyu-node.github.io/（https://junyu-node.github.io/）</a> ，正常显示网页，表明部署成功。</p>\n<h2 id=\"9-总结：部署步骤\"><a href=\"#9-总结：部署步骤\" class=\"headerlink\" title=\"9. 总结：部署步骤\"></a>9. 总结：部署步骤</h2><p>每次部署的步骤，可按以下三步来进行。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"10-总结：本地调试\"><a href=\"#10-总结：本地调试\" class=\"headerlink\" title=\"10. 总结：本地调试\"></a>10. 总结：本地调试</h2><ol>\n<li>在执行下面的命令后，<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g #生成</span><br><span class=\"line\">$ hexo s #启动本地服务，进行文章预览调试</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>浏览器输入<a href=\"http://localhost:4000，查看搭建效果。此后的每次变更_config.yml\" target=\"_blank\" rel=\"external\">http://localhost:4000，查看搭建效果。此后的每次变更_config.yml</a> 文件或者新建文件都可以先用此命令调试，尤其是当你想调试新添加的主题时。</p>\n<ol>\n<li>可以用简化的一条命令<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s -g</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"11-命令总结\"><a href=\"#11-命令总结\" class=\"headerlink\" title=\"11 命令总结\"></a>11 命令总结</h2><p> 11.1常用命令</p>\n<pre>\nhexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成静态页面至public目录\nhexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\nhexo deploy #将.deploy目录部署到GitHub\nhexo help  # 查看帮助\nhexo version  #查看Hexo的版本\n</pre>\n\n<p>11.2复合命令</p>\n<pre>\nhexo deploy -g  #生成加部署\nhexo server -g  #生成加预览\n</pre>\n命令的简写为：\n<pre>\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n</pre>\n\n<h1 id=\"四-配置-主题-和一些功能\"><a href=\"#四-配置-主题-和一些功能\" class=\"headerlink\" title=\"四 配置 主题 和一些功能\"></a>四 配置 主题 和一些功能</h1><h2 id=\"1-主题\"><a href=\"#1-主题\" class=\"headerlink\" title=\"1 主题\"></a>1 主题</h2><p>我安装的主题是next,<a href=\"http://theme-next.iissnan.com/getting-started.html\" target=\"_blank\" rel=\"external\">next</a><br>1.1在你的根目录下下载主题</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n<p>1.2 在hexo/_config.yml 里边搜索</p>\n<pre>\n    theme: next\n</pre>\n\n<p>1.3语言设置</p>\n<pre>\n    language: zh-Hans\n</pre>\n1.4主题设定\nhexo/themes/next/_config.yml 里边搜索 scheme\n<pre>\n    #scheme: Muse\n    #scheme: Mist\n    scheme: Pisces\n</pre>\n1.5设置 菜单\n<pre>\nmenu:\n  home: /\n  archives: /archives\n  #about: /about\n  #categories: /categories\n  tags: /tags\n  #commonweal: /404.html\n</pre>\n\n<h2 id=\"2多说评论\"><a href=\"#2多说评论\" class=\"headerlink\" title=\"2多说评论\"></a>2多说评论</h2><p>iissnan-notes 为多说的域名</p>\n<pre>\nduoshuo_shortname: iissnan-notes\n</pre>\n\n<h2 id=\"3-搜索服务Swiftype-站内搜索\"><a href=\"#3-搜索服务Swiftype-站内搜索\" class=\"headerlink\" title=\"3.搜索服务Swiftype 站内搜索\"></a>3.搜索服务<a href=\"https://swiftype.com/\" target=\"_blank\" rel=\"external\">Swiftype</a> 站内搜索</h2><p>xxx的值为 图片涂灰的部分<br>swiftype_key: xxxxxxxxx</p>\n<h2 id=\"4百度统计\"><a href=\"#4百度统计\" class=\"headerlink\" title=\"4百度统计\"></a>4百度统计</h2><pre>\n    baidu_analytics:\n</pre>\n\n\n<h1 id=\"五-参考文档-网址\"><a href=\"#五-参考文档-网址\" class=\"headerlink\" title=\"五 参考文档 网址\"></a>五 参考文档 网址</h1><p>1.<a href=\"http://www.cnblogs.com/zhcncn/p/4097881.html\" target=\"_blank\" rel=\"external\">Hexo搭建Github静态博客</a><br>2.<a href=\"https://swiftype.com/\" target=\"_blank\" rel=\"external\">站内搜索</a><br>3.<a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"external\">next主题</a></p>\n","excerpt":"<p>通过一些文章自己搭建hexo 并且掉的一些坑</p>","more":"<h1 id=\"一环境\"><a href=\"#一环境\" class=\"headerlink\" title=\"一环境\"></a>一环境</h1><pre><code>1. 安装git\n</code></pre><hr>\n<pre><code>2. 安装node\n</code></pre><hr>\n<h1 id=\"二-配置Github\"><a href=\"#二-配置Github\" class=\"headerlink\" title=\"二 配置Github\"></a>二 配置Github</h1><pre><code>1. 建立Repository\n</code></pre><hr>\n<p>建立与你用户名对应的仓库，仓库名必须为【your_user_name.github.io】<br>比如的自己的git用户名叫junyu-node 仓库名字必须为 junyu-node.github.io</p>\n<pre><code>2. 配置SSH-Key\n</code></pre><hr>\n<p>2.1<br>在Git Bash输入以下指令（任意位置点击鼠标右键），检查是否已经存在了SSH keys。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -al ~/.ssh</span><br></pre></td></tr></table></figure></p>\n<p>2.2<br>输入以下指令（邮箱就是你注册Github时候的邮箱）后，回车：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;angelen10@163.com&quot;</span><br></pre></td></tr></table></figure></p>\n<p>2.3<br>然后它会提示要你输入passphrase（如上图，我没有输入直接回车，如果你输入的话，要记得，到时候会用到）。<br>2.4<br>然后键入以下指令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-agent -s</span><br></pre></td></tr></table></figure></p>\n<p>2.5<br>继续输入指令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure></p>\n<p>输入之后，在我这里是出错了，不知道你的有没有出错。</p>\n<p>如果你的也是这样子出错了的话，就输入以下指令：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">eval `ssh-agent -s`</span><br><span class=\"line\">ssh-add</span><br></pre></td></tr></table></figure></p>\n<p>到了这一步，就可以添加SSH key到你的Github账户了。键入以下指令，拷贝Key（先拷贝了，等一下可以直接粘贴）：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">clip &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></p>\n<p>2.6<br>然后到Github里面 然后点击 settings<br>左边导航有个 SSH and GPG keys 点击 进去<br>然后 点击  New SSH key 设置一个名字 然后粘贴进去 保存即可</p>\n<hr>\n<p>详情请参考<a href=\"http://jingyan.baidu.com/article/d8072ac47aca0fec95cefd2d.html\">史上最详细“截图”搭建Hexo博客并部署到Github</a></p>\n<h1 id=\"三-安装Hexo\"><a href=\"#三-安装Hexo\" class=\"headerlink\" title=\"三 安装Hexo\"></a>三 安装Hexo</h1><h2 id=\"1-Installation\"><a href=\"#1-Installation\" class=\"headerlink\" title=\"   1. Installation\"></a>   1. Installation</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-在电脑中建立一个名字叫「Hexo」的文件夹，然后在此文件夹中右键打开Git-Bash。\"><a href=\"#2-在电脑中建立一个名字叫「Hexo」的文件夹，然后在此文件夹中右键打开Git-Bash。\" class=\"headerlink\" title=\"   2. 在电脑中建立一个名字叫「Hexo」的文件夹，然后在此文件夹中右键打开Git Bash。\"></a>   2. 在电脑中建立一个名字叫「Hexo」的文件夹，然后在此文件夹中右键打开Git Bash。</h2><p>初始化 hexo<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure></p>\n<p>成功会出现<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[info] Copying data</span><br><span class=\"line\">[info] You are almost done! Don&apos;t forget to run `npm install` before you start b</span><br><span class=\"line\">logging with Hexo!</span><br></pre></td></tr></table></figure></p>\n<p>Hexo随后会自动在目标文件夹建立网站所需要的文件。然后按照提示，运行 npm install（在 /D/Hexo下）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install</span><br></pre></td></tr></table></figure></p>\n<p>会在D:\\Hexo目录中安装 node_modules。</p>\n<p> 3.起服务 测试 start the server</p>\n<hr>\n <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p> [info] Hexo is running at <a href=\"http://localhost:4000/\">http://localhost:4000/</a>. Press Ctrl+C to stop.</p>\n<p> 表明Hexo Server已经启动了，在浏览器中打开 <a href=\"http://localhost:4000/，这时可以看到Hexo已为你生成了一篇blog。\">http://localhost:4000/，这时可以看到Hexo已为你生成了一篇blog。</a></p>\n<p> 你可以按Ctrl+C 停止Server</p>\n<h2 id=\"4-创建一个新的页-Create-a-new-post\"><a href=\"#4-创建一个新的页-Create-a-new-post\" class=\"headerlink\" title=\" 4. 创建一个新的页 Create a new post\"></a> 4. 创建一个新的页 Create a new post</h2> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new &quot;My New Post&quot;</span><br></pre></td></tr></table></figure>\n<p> [info] File created at d:\\Hexo\\source_posts\\My-New-Post.md</p>\n<p> 刷新 (localhost:4000/)，可以发现已生成了一篇新文章 “My New Post”。</p>\n <p style=\"color:#f00\"><br> 有一个问题，发现 “My New Post” 被发了2遍，在Hexo server所在的git bash窗口也能看到create了2次。<br> 经验证，在hexo new “My New Post” 时，如果按Ctrl+C将hexo server停掉，就不会出现发2次的问题了。<br><br> 所以，在hexo new文章时，需要stop server。<br><br> </p>\n\n\n<h2 id=\"5-Generate-static-files\"><a href=\"#5-Generate-static-files\" class=\"headerlink\" title=\" 5 Generate static files\"></a> 5 Generate static files</h2><p>执行下面的命令，将markdown文件生成静态网页。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure></p>\n<p>该命令执行完后，会在 D:\\Hexo\\public\\ 目录下生成一系列html，css等文件</p>\n<h2 id=\"6-编辑文章\"><a href=\"#6-编辑文章\" class=\"headerlink\" title=\"6.编辑文章\"></a>6.编辑文章</h2><p>hexo new “My New Post”会在D:\\Hexo\\source_posts目录下生成一个markdown文件：My-New-Post.md</p>\n<p>可以使用一个支持markdown语法的编辑器（比如 Sublime Text 2）来编辑该文件。</p>\n<h2 id=\"7-部署到Github\"><a href=\"#7-部署到Github\" class=\"headerlink\" title=\" 7.部署到Github\"></a> 7.部署到Github</h2><p>  部署到Github前需要配置_config.yml文件，首先找到下面的内容</p>\n<p>  deploy:<br>    type: git<br>    repository: <a href=\"https://github.com/junyu-node/junyu-node.github.io.git\">https://github.com/junyu-node/junyu-node.github.io.git</a><br>    branch: master</p>\n<p><p style=\"color:#f00\"><br>    配置冒号后边必须有空格<br>     hexo 3.0 type 需要配置成git 其他的配置成github<br>     <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p>\n<p></p></p>\n<h2 id=\"8-测试\"><a href=\"#8-测试\" class=\"headerlink\" title=\"8. 测试\"></a>8. 测试</h2><p>当部署完成后，在浏览器中打开<a href=\"http://junyu-node.github.io/（https://junyu-node.github.io/）\">http://junyu-node.github.io/（https://junyu-node.github.io/）</a> ，正常显示网页，表明部署成功。</p>\n<h2 id=\"9-总结：部署步骤\"><a href=\"#9-总结：部署步骤\" class=\"headerlink\" title=\"9. 总结：部署步骤\"></a>9. 总结：部署步骤</h2><p>每次部署的步骤，可按以下三步来进行。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo generate</span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"10-总结：本地调试\"><a href=\"#10-总结：本地调试\" class=\"headerlink\" title=\"10. 总结：本地调试\"></a>10. 总结：本地调试</h2><ol>\n<li>在执行下面的命令后，<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo g #生成</span><br><span class=\"line\">$ hexo s #启动本地服务，进行文章预览调试</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>浏览器输入<a href=\"http://localhost:4000，查看搭建效果。此后的每次变更_config.yml\">http://localhost:4000，查看搭建效果。此后的每次变更_config.yml</a> 文件或者新建文件都可以先用此命令调试，尤其是当你想调试新添加的主题时。</p>\n<ol>\n<li>可以用简化的一条命令<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s -g</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"11-命令总结\"><a href=\"#11-命令总结\" class=\"headerlink\" title=\"11 命令总结\"></a>11 命令总结</h2><p> 11.1常用命令</p>\n<pre>\nhexo new \"postName\" #新建文章\nhexo new page \"pageName\" #新建页面\nhexo generate #生成静态页面至public目录\nhexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）\nhexo deploy #将.deploy目录部署到GitHub\nhexo help  # 查看帮助\nhexo version  #查看Hexo的版本\n</pre>\n\n<p>11.2复合命令</p>\n<pre>\nhexo deploy -g  #生成加部署\nhexo server -g  #生成加预览\n</pre>\n命令的简写为：\n<pre>\nhexo n == hexo new\nhexo g == hexo generate\nhexo s == hexo server\nhexo d == hexo deploy\n</pre>\n\n<h1 id=\"四-配置-主题-和一些功能\"><a href=\"#四-配置-主题-和一些功能\" class=\"headerlink\" title=\"四 配置 主题 和一些功能\"></a>四 配置 主题 和一些功能</h1><h2 id=\"1-主题\"><a href=\"#1-主题\" class=\"headerlink\" title=\"1 主题\"></a>1 主题</h2><p>我安装的主题是next,<a href=\"http://theme-next.iissnan.com/getting-started.html\">next</a><br>1.1在你的根目录下下载主题</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n<p>1.2 在hexo/_config.yml 里边搜索</p>\n<pre>\n    theme: next\n</pre>\n\n<p>1.3语言设置</p>\n<pre>\n    language: zh-Hans\n</pre>\n1.4主题设定\nhexo/themes/next/_config.yml 里边搜索 scheme\n<pre>\n    #scheme: Muse\n    #scheme: Mist\n    scheme: Pisces\n</pre>\n1.5设置 菜单\n<pre>\nmenu:\n  home: /\n  archives: /archives\n  #about: /about\n  #categories: /categories\n  tags: /tags\n  #commonweal: /404.html\n</pre>\n\n<h2 id=\"2多说评论\"><a href=\"#2多说评论\" class=\"headerlink\" title=\"2多说评论\"></a>2多说评论</h2><p>iissnan-notes 为多说的域名</p>\n<pre>\nduoshuo_shortname: iissnan-notes\n</pre>\n\n<h2 id=\"3-搜索服务Swiftype-站内搜索\"><a href=\"#3-搜索服务Swiftype-站内搜索\" class=\"headerlink\" title=\"3.搜索服务Swiftype 站内搜索\"></a>3.搜索服务<a href=\"https://swiftype.com/\">Swiftype</a> 站内搜索</h2><p>xxx的值为 图片涂灰的部分<br>swiftype_key: xxxxxxxxx</p>\n<h2 id=\"4百度统计\"><a href=\"#4百度统计\" class=\"headerlink\" title=\"4百度统计\"></a>4百度统计</h2><pre>\n    baidu_analytics:\n</pre>\n\n\n<h1 id=\"五-参考文档-网址\"><a href=\"#五-参考文档-网址\" class=\"headerlink\" title=\"五 参考文档 网址\"></a>五 参考文档 网址</h1><p>1.<a href=\"http://www.cnblogs.com/zhcncn/p/4097881.html\">Hexo搭建Github静态博客</a><br>2.<a href=\"https://swiftype.com/\">站内搜索</a><br>3.<a href=\"http://theme-next.iissnan.com/\">next主题</a></p>"},{"title":"git简单应用","date":"2016-06-21T06:18:26.000Z","comments":1,"_content":"\n一些git的简单应用入门\n\n<!--more-->\n\n\n1.安装git\n===============\n安装地址为[https://git-scm.com/download/](https://git-scm.com/download/)\n\n2.基本配置\n===============\n1.配置自己的用户名密码\n------------------\n```\ngit config --global user.name \"junyu-node\";\ngit config --global user.email \"1161976385@qq.com\";\n\n\n```\n2.可以查看已有的配置信息\n\n```\ngit config --list\n\n```\n3.基本操作\n===========\n\n\n1.新建一个仓库\n--------------\n```\n    git init\n    //如果已经有了一个仓库 直接clone到本地即可\n    git clone (git地址)\n```\n\n2. 讲文件添加到缓存\n-----------------\n\n```\n//添加一个文件\ngit add README.md\n//添加所有的文件\ngit add -A\n//或者\ngit add *\n\n```\n3.查看当前版本库各个文件的状态\n---------------\n```\ngit status\n```\n\n4.将缓冲区的内容添加到仓库\n---------\n```\ngit commit -m\"注释\"\n```\n5.取消已经缓存的文件\n--------------\n```\ngit reset HEAD --hello.php\n//如果粗暴些\ngit reset --bard 版本号\n// 删除某个文件并且从git的仓库移除\ngit rm 文件\n```\n\n6.设置别名\n----------\n设置别名的好处就是方便写命令\n\n```\n git config --golbal alias.st status\n git config --golbal alias.ci commit\n git config --golbal alias.co checkout\n git config --golbal alias.br btanch\n \n```\n\n","source":"_posts/git简单应用.md","raw":"---\ntitle: git简单应用\ndate: 2016-06-21 14:18:26\ntags: [git,js]\ncomments: true\n---\n\n一些git的简单应用入门\n\n<!--more-->\n\n\n1.安装git\n===============\n安装地址为[https://git-scm.com/download/](https://git-scm.com/download/)\n\n2.基本配置\n===============\n1.配置自己的用户名密码\n------------------\n```\ngit config --global user.name \"junyu-node\";\ngit config --global user.email \"1161976385@qq.com\";\n\n\n```\n2.可以查看已有的配置信息\n\n```\ngit config --list\n\n```\n3.基本操作\n===========\n\n\n1.新建一个仓库\n--------------\n```\n    git init\n    //如果已经有了一个仓库 直接clone到本地即可\n    git clone (git地址)\n```\n\n2. 讲文件添加到缓存\n-----------------\n\n```\n//添加一个文件\ngit add README.md\n//添加所有的文件\ngit add -A\n//或者\ngit add *\n\n```\n3.查看当前版本库各个文件的状态\n---------------\n```\ngit status\n```\n\n4.将缓冲区的内容添加到仓库\n---------\n```\ngit commit -m\"注释\"\n```\n5.取消已经缓存的文件\n--------------\n```\ngit reset HEAD --hello.php\n//如果粗暴些\ngit reset --bard 版本号\n// 删除某个文件并且从git的仓库移除\ngit rm 文件\n```\n\n6.设置别名\n----------\n设置别名的好处就是方便写命令\n\n```\n git config --golbal alias.st status\n git config --golbal alias.ci commit\n git config --golbal alias.co checkout\n git config --golbal alias.br btanch\n \n```\n\n","slug":"git简单应用","published":1,"updated":"2016-06-22T01:08:56.000Z","layout":"post","photos":[],"link":"","_id":"cipq7e5ob0003g6u0p8riuyq4","content":"<p>一些git的简单应用入门</p>\n<a id=\"more\"></a>\n<h1 id=\"1-安装git\"><a href=\"#1-安装git\" class=\"headerlink\" title=\"1.安装git\"></a>1.安装git</h1><p>安装地址为<a href=\"https://git-scm.com/download/\" target=\"_blank\" rel=\"external\">https://git-scm.com/download/</a></p>\n<h1 id=\"2-基本配置\"><a href=\"#2-基本配置\" class=\"headerlink\" title=\"2.基本配置\"></a>2.基本配置</h1><h2 id=\"1-配置自己的用户名密码\"><a href=\"#1-配置自己的用户名密码\" class=\"headerlink\" title=\"1.配置自己的用户名密码\"></a>1.配置自己的用户名密码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;junyu-node&quot;;</span><br><span class=\"line\">git config --global user.email &quot;1161976385@qq.com&quot;;</span><br></pre></td></tr></table></figure>\n<p>2.可以查看已有的配置信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --list</span><br></pre></td></tr></table></figure>\n<h1 id=\"3-基本操作\"><a href=\"#3-基本操作\" class=\"headerlink\" title=\"3.基本操作\"></a>3.基本操作</h1><h2 id=\"1-新建一个仓库\"><a href=\"#1-新建一个仓库\" class=\"headerlink\" title=\"1.新建一个仓库\"></a>1.新建一个仓库</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\">//如果已经有了一个仓库 直接clone到本地即可</span><br><span class=\"line\">git clone (git地址)</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-讲文件添加到缓存\"><a href=\"#2-讲文件添加到缓存\" class=\"headerlink\" title=\"2. 讲文件添加到缓存\"></a>2. 讲文件添加到缓存</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//添加一个文件</span><br><span class=\"line\">git add README.md</span><br><span class=\"line\">//添加所有的文件</span><br><span class=\"line\">git add -A</span><br><span class=\"line\">//或者</span><br><span class=\"line\">git add *</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-查看当前版本库各个文件的状态\"><a href=\"#3-查看当前版本库各个文件的状态\" class=\"headerlink\" title=\"3.查看当前版本库各个文件的状态\"></a>3.查看当前版本库各个文件的状态</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-将缓冲区的内容添加到仓库\"><a href=\"#4-将缓冲区的内容添加到仓库\" class=\"headerlink\" title=\"4.将缓冲区的内容添加到仓库\"></a>4.将缓冲区的内容添加到仓库</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m&quot;注释&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-取消已经缓存的文件\"><a href=\"#5-取消已经缓存的文件\" class=\"headerlink\" title=\"5.取消已经缓存的文件\"></a>5.取消已经缓存的文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset HEAD --hello.php</span><br><span class=\"line\">//如果粗暴些</span><br><span class=\"line\">git reset --bard 版本号</span><br><span class=\"line\">// 删除某个文件并且从git的仓库移除</span><br><span class=\"line\">git rm 文件</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-设置别名\"><a href=\"#6-设置别名\" class=\"headerlink\" title=\"6.设置别名\"></a>6.设置别名</h2><p>设置别名的好处就是方便写命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --golbal alias.st status</span><br><span class=\"line\">git config --golbal alias.ci commit</span><br><span class=\"line\">git config --golbal alias.co checkout</span><br><span class=\"line\">git config --golbal alias.br btanch</span><br></pre></td></tr></table></figure>\n","excerpt":"<p>一些git的简单应用入门</p>","more":"<h1 id=\"1-安装git\"><a href=\"#1-安装git\" class=\"headerlink\" title=\"1.安装git\"></a>1.安装git</h1><p>安装地址为<a href=\"https://git-scm.com/download/\">https://git-scm.com/download/</a></p>\n<h1 id=\"2-基本配置\"><a href=\"#2-基本配置\" class=\"headerlink\" title=\"2.基本配置\"></a>2.基本配置</h1><h2 id=\"1-配置自己的用户名密码\"><a href=\"#1-配置自己的用户名密码\" class=\"headerlink\" title=\"1.配置自己的用户名密码\"></a>1.配置自己的用户名密码</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name &quot;junyu-node&quot;;</span><br><span class=\"line\">git config --global user.email &quot;1161976385@qq.com&quot;;</span><br></pre></td></tr></table></figure>\n<p>2.可以查看已有的配置信息</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --list</span><br></pre></td></tr></table></figure>\n<h1 id=\"3-基本操作\"><a href=\"#3-基本操作\" class=\"headerlink\" title=\"3.基本操作\"></a>3.基本操作</h1><h2 id=\"1-新建一个仓库\"><a href=\"#1-新建一个仓库\" class=\"headerlink\" title=\"1.新建一个仓库\"></a>1.新建一个仓库</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init</span><br><span class=\"line\">//如果已经有了一个仓库 直接clone到本地即可</span><br><span class=\"line\">git clone (git地址)</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-讲文件添加到缓存\"><a href=\"#2-讲文件添加到缓存\" class=\"headerlink\" title=\"2. 讲文件添加到缓存\"></a>2. 讲文件添加到缓存</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//添加一个文件</span><br><span class=\"line\">git add README.md</span><br><span class=\"line\">//添加所有的文件</span><br><span class=\"line\">git add -A</span><br><span class=\"line\">//或者</span><br><span class=\"line\">git add *</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-查看当前版本库各个文件的状态\"><a href=\"#3-查看当前版本库各个文件的状态\" class=\"headerlink\" title=\"3.查看当前版本库各个文件的状态\"></a>3.查看当前版本库各个文件的状态</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git status</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-将缓冲区的内容添加到仓库\"><a href=\"#4-将缓冲区的内容添加到仓库\" class=\"headerlink\" title=\"4.将缓冲区的内容添加到仓库\"></a>4.将缓冲区的内容添加到仓库</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git commit -m&quot;注释&quot;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-取消已经缓存的文件\"><a href=\"#5-取消已经缓存的文件\" class=\"headerlink\" title=\"5.取消已经缓存的文件\"></a>5.取消已经缓存的文件</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git reset HEAD --hello.php</span><br><span class=\"line\">//如果粗暴些</span><br><span class=\"line\">git reset --bard 版本号</span><br><span class=\"line\">// 删除某个文件并且从git的仓库移除</span><br><span class=\"line\">git rm 文件</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-设置别名\"><a href=\"#6-设置别名\" class=\"headerlink\" title=\"6.设置别名\"></a>6.设置别名</h2><p>设置别名的好处就是方便写命令</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --golbal alias.st status</span><br><span class=\"line\">git config --golbal alias.ci commit</span><br><span class=\"line\">git config --golbal alias.co checkout</span><br><span class=\"line\">git config --golbal alias.br btanch</span><br></pre></td></tr></table></figure>"},{"title":"hexo换电脑","date":"2016-06-21T01:33:04.000Z","comments":1,"_content":"换了电脑编辑我的方法是新建一个hexo的分支储存编辑的文件\n<!--more-->\n1.给自己的仓库创建一个新的分支,并且把仓库的分支切换默认为hexo\n===================\n```python\n\ngit branch hexo //创建一个分支为hexo\ngit chckout hexo //本地切换到hexo位默认分支\n```\n 线上切换默认的分支\n\n1.1点击branches( 如果 branches 只有一个分支,许新建分支hexo)\n-----\n1.2 点击 Change default branch\n-----\n1.3 切换 Default branch 下的 master到hexo 点击update\n\n2.添加一个npm\n======\n```python\n\nnpm install hexo-deployer-git --save\n\n```\n\n3.push到服务器上\n=============\n\n 1.创建文件 .gitignore 写入要忽略上传的项目\n --------------------\n ```\n touch .gitignore\n ```\n 里边填写内容\n\n <pre>\n    node_modules\n    public\n    .deploy_git\n <pre>\n\n 2.上传到github上\n --------------\n ```\n git add -A //\n git commit -m\"注释\"\n git remote add origin(别名) https://github.com/junyu-node/junyu-node.github.io.git(Github网址)\n git push origin hexo\n\n\n ```\n 3.push master 分支\n -----------------\n ```\n hexo clean\n hexo g\n hexo d\n ```\n\n4.在新的电脑上拉去代码\n=================\n1 拉取代码\n\n-----------\n```\ngit clone https://github.com/junyu-node/junyu-node.github.io.git\n\ncd junyu-node.github.io.git\n```\n\n2.安装npm\n\n```\nnpm install hexo\nnpm install\nnpm install hexo-deployer-git//（记得，不需要hexo init这条指令）。\ngit clone https://github.com/iissnan/hexo-theme-next themes/next\n\n\n```\n3.修改 next 里边的配置 然后就可以正常的使用了\n```python\n\nmenu:\n  home: /\n  #categories: /categories\n  about: /about\n  archives: /archives\n  tags: /tags\n  #commonweal: /404.html\n  menu_icons:\n    enable: true\n    #KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome\n    home: home\n    about: \"贾畯嵎(junyu)\"\n    categories: th\n    tags: tags\n    archives: archive\n    commonweal: heartbeat\n    # Swiftype Search API Key\n    swiftype_key: yBBCHczEQy4isXyS-wws\n\n    # Baidu Analytics ID\n    baidu_analytics: 33438f0a10c1389908796cdf8c3b6caf\n\n    # Duoshuo ShortName\n    duoshuo_shortname: junyu-node\n```\n\n\n\n\n","source":"_posts/hexo换电脑.md","raw":"---\ntitle: hexo换电脑\ndate: 2016-06-21 09:33:04\ntags: [hexo,git]\ncomments: true\n---\n换了电脑编辑我的方法是新建一个hexo的分支储存编辑的文件\n<!--more-->\n1.给自己的仓库创建一个新的分支,并且把仓库的分支切换默认为hexo\n===================\n```python\n\ngit branch hexo //创建一个分支为hexo\ngit chckout hexo //本地切换到hexo位默认分支\n```\n 线上切换默认的分支\n\n1.1点击branches( 如果 branches 只有一个分支,许新建分支hexo)\n-----\n1.2 点击 Change default branch\n-----\n1.3 切换 Default branch 下的 master到hexo 点击update\n\n2.添加一个npm\n======\n```python\n\nnpm install hexo-deployer-git --save\n\n```\n\n3.push到服务器上\n=============\n\n 1.创建文件 .gitignore 写入要忽略上传的项目\n --------------------\n ```\n touch .gitignore\n ```\n 里边填写内容\n\n <pre>\n    node_modules\n    public\n    .deploy_git\n <pre>\n\n 2.上传到github上\n --------------\n ```\n git add -A //\n git commit -m\"注释\"\n git remote add origin(别名) https://github.com/junyu-node/junyu-node.github.io.git(Github网址)\n git push origin hexo\n\n\n ```\n 3.push master 分支\n -----------------\n ```\n hexo clean\n hexo g\n hexo d\n ```\n\n4.在新的电脑上拉去代码\n=================\n1 拉取代码\n\n-----------\n```\ngit clone https://github.com/junyu-node/junyu-node.github.io.git\n\ncd junyu-node.github.io.git\n```\n\n2.安装npm\n\n```\nnpm install hexo\nnpm install\nnpm install hexo-deployer-git//（记得，不需要hexo init这条指令）。\ngit clone https://github.com/iissnan/hexo-theme-next themes/next\n\n\n```\n3.修改 next 里边的配置 然后就可以正常的使用了\n```python\n\nmenu:\n  home: /\n  #categories: /categories\n  about: /about\n  archives: /archives\n  tags: /tags\n  #commonweal: /404.html\n  menu_icons:\n    enable: true\n    #KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome\n    home: home\n    about: \"贾畯嵎(junyu)\"\n    categories: th\n    tags: tags\n    archives: archive\n    commonweal: heartbeat\n    # Swiftype Search API Key\n    swiftype_key: yBBCHczEQy4isXyS-wws\n\n    # Baidu Analytics ID\n    baidu_analytics: 33438f0a10c1389908796cdf8c3b6caf\n\n    # Duoshuo ShortName\n    duoshuo_shortname: junyu-node\n```\n\n\n\n\n","slug":"hexo换电脑","published":1,"updated":"2016-06-21T03:13:37.000Z","layout":"post","photos":[],"link":"","_id":"cipq7e5oq0006g6u0cj721z4h","content":"<p>换了电脑编辑我的方法是新建一个hexo的分支储存编辑的文件<br><a id=\"more\"></a></p>\n<h1 id=\"1-给自己的仓库创建一个新的分支-并且把仓库的分支切换默认为hexo\"><a href=\"#1-给自己的仓库创建一个新的分支-并且把仓库的分支切换默认为hexo\" class=\"headerlink\" title=\"1.给自己的仓库创建一个新的分支,并且把仓库的分支切换默认为hexo\"></a>1.给自己的仓库创建一个新的分支,并且把仓库的分支切换默认为hexo</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">git branch hexo //创建一个分支为hexo</span><br><span class=\"line\">git chckout hexo //本地切换到hexo位默认分支</span><br></pre></td></tr></table></figure>\n<p> 线上切换默认的分支</p>\n<h2 id=\"1-1点击branches-如果-branches-只有一个分支-许新建分支hexo\"><a href=\"#1-1点击branches-如果-branches-只有一个分支-许新建分支hexo\" class=\"headerlink\" title=\"1.1点击branches( 如果 branches 只有一个分支,许新建分支hexo)\"></a>1.1点击branches( 如果 branches 只有一个分支,许新建分支hexo)</h2><h2 id=\"1-2-点击-Change-default-branch\"><a href=\"#1-2-点击-Change-default-branch\" class=\"headerlink\" title=\"1.2 点击 Change default branch\"></a>1.2 点击 Change default branch</h2><p>1.3 切换 Default branch 下的 master到hexo 点击update</p>\n<h1 id=\"2-添加一个npm\"><a href=\"#2-添加一个npm\" class=\"headerlink\" title=\"2.添加一个npm\"></a>2.添加一个npm</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h1 id=\"3-push到服务器上\"><a href=\"#3-push到服务器上\" class=\"headerlink\" title=\"3.push到服务器上\"></a>3.push到服务器上</h1><h2 id=\"1-创建文件-gitignore-写入要忽略上传的项目\"><a href=\"#1-创建文件-gitignore-写入要忽略上传的项目\" class=\"headerlink\" title=\" 1.创建文件 .gitignore 写入要忽略上传的项目\"></a> 1.创建文件 .gitignore 写入要忽略上传的项目</h2> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch .gitignore</span><br></pre></td></tr></table></figure>\n<p> 里边填写内容</p>\n<p> <pre><br>    node_modules<br>    public<br>    .deploy_git<br> <pre></pre></pre></p>\n<h2 id=\"2-上传到github上\"><a href=\"#2-上传到github上\" class=\"headerlink\" title=\" 2.上传到github上\"></a> 2.上传到github上</h2> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add -A //</span><br><span class=\"line\">git commit -m&quot;注释&quot;</span><br><span class=\"line\">git remote add origin(别名) https://github.com/junyu-node/junyu-node.github.io.git(Github网址)</span><br><span class=\"line\">git push origin hexo</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-push-master-分支\"><a href=\"#3-push-master-分支\" class=\"headerlink\" title=\" 3.push master 分支\"></a> 3.push master 分支</h2> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<h1 id=\"4-在新的电脑上拉去代码\"><a href=\"#4-在新的电脑上拉去代码\" class=\"headerlink\" title=\"4.在新的电脑上拉去代码\"></a>4.在新的电脑上拉去代码</h1><p>1 拉取代码</p>\n<hr>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/junyu-node/junyu-node.github.io.git</span><br><span class=\"line\"></span><br><span class=\"line\">cd junyu-node.github.io.git</span><br></pre></td></tr></table></figure>\n<p>2.安装npm</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm install hexo-deployer-git//（记得，不需要hexo init这条指令）。</span><br><span class=\"line\">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n<p>3.修改 next 里边的配置 然后就可以正常的使用了<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">menu:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  <span class=\"comment\">#categories: /categories</span></span><br><span class=\"line\">  about: /about</span><br><span class=\"line\">  archives: /archives</span><br><span class=\"line\">  tags: /tags</span><br><span class=\"line\">  <span class=\"comment\">#commonweal: /404.html</span></span><br><span class=\"line\">  menu_icons:</span><br><span class=\"line\">    enable: true</span><br><span class=\"line\">    <span class=\"comment\">#KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</span></span><br><span class=\"line\">    home: home</span><br><span class=\"line\">    about: <span class=\"string\">\"贾畯嵎(junyu)\"</span></span><br><span class=\"line\">    categories: th</span><br><span class=\"line\">    tags: tags</span><br><span class=\"line\">    archives: archive</span><br><span class=\"line\">    commonweal: heartbeat</span><br><span class=\"line\">    <span class=\"comment\"># Swiftype Search API Key</span></span><br><span class=\"line\">    swiftype_key: yBBCHczEQy4isXyS-wws</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Baidu Analytics ID</span></span><br><span class=\"line\">    baidu_analytics: <span class=\"number\">33438</span>f0a10c1389908796cdf8c3b6caf</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Duoshuo ShortName</span></span><br><span class=\"line\">    duoshuo_shortname: junyu-node</span><br></pre></td></tr></table></figure></p>\n","excerpt":"<p>换了电脑编辑我的方法是新建一个hexo的分支储存编辑的文件<br>","more":"</p>\n<h1 id=\"1-给自己的仓库创建一个新的分支-并且把仓库的分支切换默认为hexo\"><a href=\"#1-给自己的仓库创建一个新的分支-并且把仓库的分支切换默认为hexo\" class=\"headerlink\" title=\"1.给自己的仓库创建一个新的分支,并且把仓库的分支切换默认为hexo\"></a>1.给自己的仓库创建一个新的分支,并且把仓库的分支切换默认为hexo</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">git branch hexo //创建一个分支为hexo</span><br><span class=\"line\">git chckout hexo //本地切换到hexo位默认分支</span><br></pre></td></tr></table></figure>\n<p> 线上切换默认的分支</p>\n<h2 id=\"1-1点击branches-如果-branches-只有一个分支-许新建分支hexo\"><a href=\"#1-1点击branches-如果-branches-只有一个分支-许新建分支hexo\" class=\"headerlink\" title=\"1.1点击branches( 如果 branches 只有一个分支,许新建分支hexo)\"></a>1.1点击branches( 如果 branches 只有一个分支,许新建分支hexo)</h2><h2 id=\"1-2-点击-Change-default-branch\"><a href=\"#1-2-点击-Change-default-branch\" class=\"headerlink\" title=\"1.2 点击 Change default branch\"></a>1.2 点击 Change default branch</h2><p>1.3 切换 Default branch 下的 master到hexo 点击update</p>\n<h1 id=\"2-添加一个npm\"><a href=\"#2-添加一个npm\" class=\"headerlink\" title=\"2.添加一个npm\"></a>2.添加一个npm</h1><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n<h1 id=\"3-push到服务器上\"><a href=\"#3-push到服务器上\" class=\"headerlink\" title=\"3.push到服务器上\"></a>3.push到服务器上</h1><h2 id=\"1-创建文件-gitignore-写入要忽略上传的项目\"><a href=\"#1-创建文件-gitignore-写入要忽略上传的项目\" class=\"headerlink\" title=\" 1.创建文件 .gitignore 写入要忽略上传的项目\"></a> 1.创建文件 .gitignore 写入要忽略上传的项目</h2> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch .gitignore</span><br></pre></td></tr></table></figure>\n<p> 里边填写内容</p>\n<p> <pre><br>    node_modules<br>    public<br>    .deploy_git<br> <pre></p>\n<h2 id=\"2-上传到github上\"><a href=\"#2-上传到github上\" class=\"headerlink\" title=\" 2.上传到github上\"></a> 2.上传到github上</h2> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git add -A //</span><br><span class=\"line\">git commit -m&quot;注释&quot;</span><br><span class=\"line\">git remote add origin(别名) https://github.com/junyu-node/junyu-node.github.io.git(Github网址)</span><br><span class=\"line\">git push origin hexo</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-push-master-分支\"><a href=\"#3-push-master-分支\" class=\"headerlink\" title=\" 3.push master 分支\"></a> 3.push master 分支</h2> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure>\n<h1 id=\"4-在新的电脑上拉去代码\"><a href=\"#4-在新的电脑上拉去代码\" class=\"headerlink\" title=\"4.在新的电脑上拉去代码\"></a>4.在新的电脑上拉去代码</h1><p>1 拉取代码</p>\n<hr>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https://github.com/junyu-node/junyu-node.github.io.git</span><br><span class=\"line\"></span><br><span class=\"line\">cd junyu-node.github.io.git</span><br></pre></td></tr></table></figure>\n<p>2.安装npm</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo</span><br><span class=\"line\">npm install</span><br><span class=\"line\">npm install hexo-deployer-git//（记得，不需要hexo init这条指令）。</span><br><span class=\"line\">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>\n<p>3.修改 next 里边的配置 然后就可以正常的使用了<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">menu:</span><br><span class=\"line\">  home: /</span><br><span class=\"line\">  <span class=\"comment\">#categories: /categories</span></span><br><span class=\"line\">  about: /about</span><br><span class=\"line\">  archives: /archives</span><br><span class=\"line\">  tags: /tags</span><br><span class=\"line\">  <span class=\"comment\">#commonweal: /404.html</span></span><br><span class=\"line\">  menu_icons:</span><br><span class=\"line\">    enable: true</span><br><span class=\"line\">    <span class=\"comment\">#KeyMapsToMenuItemKey: NameOfTheIconFromFontAwesome</span></span><br><span class=\"line\">    home: home</span><br><span class=\"line\">    about: <span class=\"string\">\"贾畯嵎(junyu)\"</span></span><br><span class=\"line\">    categories: th</span><br><span class=\"line\">    tags: tags</span><br><span class=\"line\">    archives: archive</span><br><span class=\"line\">    commonweal: heartbeat</span><br><span class=\"line\">    <span class=\"comment\"># Swiftype Search API Key</span></span><br><span class=\"line\">    swiftype_key: yBBCHczEQy4isXyS-wws</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Baidu Analytics ID</span></span><br><span class=\"line\">    baidu_analytics: <span class=\"number\">33438</span>f0a10c1389908796cdf8c3b6caf</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Duoshuo ShortName</span></span><br><span class=\"line\">    duoshuo_shortname: junyu-node</span><br></pre></td></tr></table></figure></p>"},{"title":"markdown 简明语法手册","date":"2016-06-16T14:48:34.000Z","comments":1,"type":"tags","_content":"\n\n##markdown 简明语法手册\n\n\n\n<!-- more -->\n\n###1. 斜体和粗体\n\n使用 * 和 ** 表示斜体和粗体。\n\n示例：\n\n这是 *斜体*，这是 **粗体**。\n\n### 2. 分级标题\n\n使用 === 表示一级标题，使用 --- 表示二级标题。\n\n示例：\n\n```\n这是一个一级标题\n============================\n\n这是一个二级标题\n--------------------------------------------------\n\n### 这是一个三级标题\n```\n\n你也可以选择在行首加井号表示不同级别的标题 (H1-H6)，例如：# H1, ## H2, ### H3，#### H4。\n\n### 3. 外链接\n\n使用 \\[描述](链接地址) 为文字增加外链接。\n\n示例：\n\n这是去往 [本人博客](http://junyu-node.github.com) 的链接。\n\n### 4. 无序列表\n\n使用 *，+，- 表示无序列表。\n\n示例：\n\n- 无序列表项 一\n- 无序列表项 二\n- 无序列表项 三\n\n### 5. 有序列表\n\n使用数字和点表示有序列表。\n\n示例：\n\n1. 有序列表项 一\n2. 有序列表项 二\n3. 有序列表项 三\n\n### 6. 文字引用\n\n使用 > 表示文字引用。\n\n示例：\n\n> 野火烧不尽，春风吹又生。\n\n### 7. 行内代码块\n\n使用 \\`代码` 表示行内代码块。\n\n示例：\n\n让我们聊聊 `html`。\n\n### 8.  代码块\n\n使用 四个缩进空格 表示代码块。\n\n示例：\n\n    这是一个代码块，此行左侧有四个不可见的空格。\n\n### 9.  插入图像\n\n使用 \\!\\[描述](图片链接地址) 插入图像。\n\n示例：\n\n![我的头像](https://www.zybuluo.com/static/img/my_head.jpg)\n\n# Cmd Markdown 高阶语法手册\n\n### 1. 内容目录\n\n在段落中填写 `[TOC]` 以显示全文内容的目录结构。\n\n[TOC]\n\n### 2. 标签分类\n\n在编辑区任意行的列首位置输入以下代码给文稿标签：\n\n标签： 数学 英语 Markdown\n\n或者\n\nTags： 数学 英语 Markdown\n\n### 3. 删除线\n\n使用 ~~ 表示删除线。\n\n~~这是一段错误的文本。~~\n\n### 4. 注脚\n\n使用 [^keyword] 表示注脚。\n\n这是一个注脚[^footnote]的样例。\n\n这是第二个注脚[^footnote2]的样例。\n\n### 5. LaTeX 公式\n\n$ 表示行内公式：\n\n质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。\n\n$$ 表示整行公式：\n\n$$\\sum_{i=1}^n a_i=0$$\n\n$$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2 $$\n\n$$\\sum^{j-1}_{k=0}{\\widehat{\\gamma}_{kj} z_k}$$\n\n访问 [MathJax](http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference) 参考更多使用方法。\n\n### 6. 加强的代码块\n\n支持四十一种编程语言的语法高亮的显示，行号显示。\n\n非代码示例：\n\n```\n$ sudo apt-get install vim-gnome\n```\n\nPython 示例：\n\n```python\n@requires_authorization\ndef somefunc(param1='', param2=0):\n    '''A docstring'''\n    if param1 > param2: # interesting\n        print 'Greater'\n    return (param2 - param1 + 1) or None\n\nclass SomeClass:\n    pass\n\n>>> message = '''interpreter\n... prompt'''\n```\n\nJavaScript 示例：\n\n``` javascript\n/**\n* nth element in the fibonacci series.\n* @param n >= 0\n* @return the nth element, >= 0.\n*/\nfunction fib(n) {\n  var a = 1, b = 1;\n  var tmp;\n  while (--n >= 0) {\n    tmp = a;\n    a += b;\n    b = tmp;\n  }\n  return a;\n}\n\ndocument.write(fib(10));\n```\n\n### 7. 流程图\n\n#### 示例\n\n```flow\nst=>start: Start:>https://www.zybuluo.com\nio=>inputoutput: verification\nop=>operation: Your Operation\ncond=>condition: Yes or No?\nsub=>subroutine: Your Subroutine\ne=>end\n\nst->io->op->cond\ncond(yes)->e\ncond(no)->sub->io\n```\n\n#### 更多语法参考：[流程图语法参考](http://adrai.github.io/flowchart.js/)\n\n### 8. 序列图\n\n#### 示例 1\n\n```seq\nAlice->Bob: Hello Bob, how are you?\nNote right of Bob: Bob thinks\nBob-->Alice: I am good thanks!\n```\n\n#### 示例 2\n\n```seq\nTitle: Here is a title\nA->B: Normal line\nB-->C: Dashed line\nC->>D: Open arrow\nD-->>A: Dashed open arrow\n```\n\n#### 更多语法参考：[序列图语法参考](http://bramp.github.io/js-sequence-diagrams/)\n\n### 9. 表格支持\n\n| 项目        | 价格   |  数量  |\n| --------   | -----:  | :----:  |\n| 计算机     | \\$1600 |   5     |\n| 手机        |   \\$12   |   12   |\n| 管线        |    \\$1    |  234  |\n\n\n### 10. 定义型列表\n\n名词 1\n:   定义 1（左侧有一个可见的冒号和四个不可见的空格）\n\n代码块 2\n:   这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格）\n\n        代码块（左侧有八个不可见的空格）\n\n### 11. Html 标签\n\n本站支持在 Markdown 语法中嵌套 Html 标签，譬如，你可以用 Html 写一个纵跨两行的表格：\n\n    <table>\n        <tr>\n            <th rowspan=\"2\">值班人员</th>\n            <th>星期一</th>\n            <th>星期二</th>\n            <th>星期三</th>\n        </tr>\n        <tr>\n            <td>李强</td>\n            <td>张明</td>\n            <td>王平</td>\n        </tr>\n    </table>\n\n\n<table>\n    <tr>\n        <th rowspan=\"2\">值班人员</th>\n        <th>星期一</th>\n        <th>星期二</th>\n        <th>星期三</th>\n    </tr>\n    <tr>\n        <td>李强</td>\n        <td>张明</td>\n        <td>王平</td>\n    </tr>\n</table>\n\n### 12. 内嵌图标\n\n本站的图标系统对外开放，在文档中输入\n\n    <i class=\"icon-weibo\"></i>\n\n即显示微博的图标： <i class=\"icon-weibo icon-2x\"></i>\n\n替换 上述 `i 标签` 内的 `icon-weibo` 以显示不同的图标，例如：\n\n    <i class=\"icon-renren\"></i>\n\n即显示人人的图标： <i class=\"icon-renren icon-2x\"></i>\n\n更多的图标和玩法可以参看 [font-awesome](http://fortawesome.github.io/Font-Awesome/3.2.1/icons/) 官方网站。\n\n### 13. 待办事宜 Todo 列表\n\n使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表，并且支持子列表嵌套以及混用Markdown语法，例如：\n\n    - [ ] **Cmd Markdown 开发**\n        - [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率\n        - [ ] 支持以 PDF 格式导出文稿\n        - [x] 新增Todo列表功能 [语法参考](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments)\n        - [x] 改进 LaTex 功能\n            - [x] 修复 LaTex 公式渲染问题\n            - [x] 新增 LaTex 公式编号功能 [语法参考](http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers)\n    - [ ] **七月旅行准备**\n        - [ ] 准备邮轮上需要携带的物品\n        - [ ] 浏览日本免税店的物品\n        - [x] 购买蓝宝石公主号七月一日的船票\n\n对应显示如下待办事宜 Todo 列表：\n\n- [ ] **Cmd Markdown 开发**\n    - [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率\n    - [ ] 支持以 PDF 格式导出文稿\n    - [x] 新增Todo列表功能 [语法参考](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments)\n    - [x] 改进 LaTex 功能\n        - [x] 修复 LaTex 公式渲染问题\n        - [x] 新增 LaTex 公式编号功能 [语法参考](http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers)\n- [ ] **七月旅行准备**\n    - [ ] 准备邮轮上需要携带的物品\n    - [ ] 浏览日本免税店的物品\n    - [x] 购买蓝宝石公主号七月一日的船票\n\n\n[^footnote]: 这是一个 *注脚* 的 **文本**。\n\n[^footnote2]: 这是另一个 *注脚* 的 **文本**。\n\n","source":"_posts/markdown.md","raw":"---\ntitle: \"markdown 简明语法手册\"\ndate: 2016-06-16 22:48:34\ntags: [markdown]\ncomments: true\ntype: \"tags\"\n---\n\n\n##markdown 简明语法手册\n\n\n\n<!-- more -->\n\n###1. 斜体和粗体\n\n使用 * 和 ** 表示斜体和粗体。\n\n示例：\n\n这是 *斜体*，这是 **粗体**。\n\n### 2. 分级标题\n\n使用 === 表示一级标题，使用 --- 表示二级标题。\n\n示例：\n\n```\n这是一个一级标题\n============================\n\n这是一个二级标题\n--------------------------------------------------\n\n### 这是一个三级标题\n```\n\n你也可以选择在行首加井号表示不同级别的标题 (H1-H6)，例如：# H1, ## H2, ### H3，#### H4。\n\n### 3. 外链接\n\n使用 \\[描述](链接地址) 为文字增加外链接。\n\n示例：\n\n这是去往 [本人博客](http://junyu-node.github.com) 的链接。\n\n### 4. 无序列表\n\n使用 *，+，- 表示无序列表。\n\n示例：\n\n- 无序列表项 一\n- 无序列表项 二\n- 无序列表项 三\n\n### 5. 有序列表\n\n使用数字和点表示有序列表。\n\n示例：\n\n1. 有序列表项 一\n2. 有序列表项 二\n3. 有序列表项 三\n\n### 6. 文字引用\n\n使用 > 表示文字引用。\n\n示例：\n\n> 野火烧不尽，春风吹又生。\n\n### 7. 行内代码块\n\n使用 \\`代码` 表示行内代码块。\n\n示例：\n\n让我们聊聊 `html`。\n\n### 8.  代码块\n\n使用 四个缩进空格 表示代码块。\n\n示例：\n\n    这是一个代码块，此行左侧有四个不可见的空格。\n\n### 9.  插入图像\n\n使用 \\!\\[描述](图片链接地址) 插入图像。\n\n示例：\n\n![我的头像](https://www.zybuluo.com/static/img/my_head.jpg)\n\n# Cmd Markdown 高阶语法手册\n\n### 1. 内容目录\n\n在段落中填写 `[TOC]` 以显示全文内容的目录结构。\n\n[TOC]\n\n### 2. 标签分类\n\n在编辑区任意行的列首位置输入以下代码给文稿标签：\n\n标签： 数学 英语 Markdown\n\n或者\n\nTags： 数学 英语 Markdown\n\n### 3. 删除线\n\n使用 ~~ 表示删除线。\n\n~~这是一段错误的文本。~~\n\n### 4. 注脚\n\n使用 [^keyword] 表示注脚。\n\n这是一个注脚[^footnote]的样例。\n\n这是第二个注脚[^footnote2]的样例。\n\n### 5. LaTeX 公式\n\n$ 表示行内公式：\n\n质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。\n\n$$ 表示整行公式：\n\n$$\\sum_{i=1}^n a_i=0$$\n\n$$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2 $$\n\n$$\\sum^{j-1}_{k=0}{\\widehat{\\gamma}_{kj} z_k}$$\n\n访问 [MathJax](http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference) 参考更多使用方法。\n\n### 6. 加强的代码块\n\n支持四十一种编程语言的语法高亮的显示，行号显示。\n\n非代码示例：\n\n```\n$ sudo apt-get install vim-gnome\n```\n\nPython 示例：\n\n```python\n@requires_authorization\ndef somefunc(param1='', param2=0):\n    '''A docstring'''\n    if param1 > param2: # interesting\n        print 'Greater'\n    return (param2 - param1 + 1) or None\n\nclass SomeClass:\n    pass\n\n>>> message = '''interpreter\n... prompt'''\n```\n\nJavaScript 示例：\n\n``` javascript\n/**\n* nth element in the fibonacci series.\n* @param n >= 0\n* @return the nth element, >= 0.\n*/\nfunction fib(n) {\n  var a = 1, b = 1;\n  var tmp;\n  while (--n >= 0) {\n    tmp = a;\n    a += b;\n    b = tmp;\n  }\n  return a;\n}\n\ndocument.write(fib(10));\n```\n\n### 7. 流程图\n\n#### 示例\n\n```flow\nst=>start: Start:>https://www.zybuluo.com\nio=>inputoutput: verification\nop=>operation: Your Operation\ncond=>condition: Yes or No?\nsub=>subroutine: Your Subroutine\ne=>end\n\nst->io->op->cond\ncond(yes)->e\ncond(no)->sub->io\n```\n\n#### 更多语法参考：[流程图语法参考](http://adrai.github.io/flowchart.js/)\n\n### 8. 序列图\n\n#### 示例 1\n\n```seq\nAlice->Bob: Hello Bob, how are you?\nNote right of Bob: Bob thinks\nBob-->Alice: I am good thanks!\n```\n\n#### 示例 2\n\n```seq\nTitle: Here is a title\nA->B: Normal line\nB-->C: Dashed line\nC->>D: Open arrow\nD-->>A: Dashed open arrow\n```\n\n#### 更多语法参考：[序列图语法参考](http://bramp.github.io/js-sequence-diagrams/)\n\n### 9. 表格支持\n\n| 项目        | 价格   |  数量  |\n| --------   | -----:  | :----:  |\n| 计算机     | \\$1600 |   5     |\n| 手机        |   \\$12   |   12   |\n| 管线        |    \\$1    |  234  |\n\n\n### 10. 定义型列表\n\n名词 1\n:   定义 1（左侧有一个可见的冒号和四个不可见的空格）\n\n代码块 2\n:   这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格）\n\n        代码块（左侧有八个不可见的空格）\n\n### 11. Html 标签\n\n本站支持在 Markdown 语法中嵌套 Html 标签，譬如，你可以用 Html 写一个纵跨两行的表格：\n\n    <table>\n        <tr>\n            <th rowspan=\"2\">值班人员</th>\n            <th>星期一</th>\n            <th>星期二</th>\n            <th>星期三</th>\n        </tr>\n        <tr>\n            <td>李强</td>\n            <td>张明</td>\n            <td>王平</td>\n        </tr>\n    </table>\n\n\n<table>\n    <tr>\n        <th rowspan=\"2\">值班人员</th>\n        <th>星期一</th>\n        <th>星期二</th>\n        <th>星期三</th>\n    </tr>\n    <tr>\n        <td>李强</td>\n        <td>张明</td>\n        <td>王平</td>\n    </tr>\n</table>\n\n### 12. 内嵌图标\n\n本站的图标系统对外开放，在文档中输入\n\n    <i class=\"icon-weibo\"></i>\n\n即显示微博的图标： <i class=\"icon-weibo icon-2x\"></i>\n\n替换 上述 `i 标签` 内的 `icon-weibo` 以显示不同的图标，例如：\n\n    <i class=\"icon-renren\"></i>\n\n即显示人人的图标： <i class=\"icon-renren icon-2x\"></i>\n\n更多的图标和玩法可以参看 [font-awesome](http://fortawesome.github.io/Font-Awesome/3.2.1/icons/) 官方网站。\n\n### 13. 待办事宜 Todo 列表\n\n使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表，并且支持子列表嵌套以及混用Markdown语法，例如：\n\n    - [ ] **Cmd Markdown 开发**\n        - [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率\n        - [ ] 支持以 PDF 格式导出文稿\n        - [x] 新增Todo列表功能 [语法参考](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments)\n        - [x] 改进 LaTex 功能\n            - [x] 修复 LaTex 公式渲染问题\n            - [x] 新增 LaTex 公式编号功能 [语法参考](http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers)\n    - [ ] **七月旅行准备**\n        - [ ] 准备邮轮上需要携带的物品\n        - [ ] 浏览日本免税店的物品\n        - [x] 购买蓝宝石公主号七月一日的船票\n\n对应显示如下待办事宜 Todo 列表：\n\n- [ ] **Cmd Markdown 开发**\n    - [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率\n    - [ ] 支持以 PDF 格式导出文稿\n    - [x] 新增Todo列表功能 [语法参考](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments)\n    - [x] 改进 LaTex 功能\n        - [x] 修复 LaTex 公式渲染问题\n        - [x] 新增 LaTex 公式编号功能 [语法参考](http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers)\n- [ ] **七月旅行准备**\n    - [ ] 准备邮轮上需要携带的物品\n    - [ ] 浏览日本免税店的物品\n    - [x] 购买蓝宝石公主号七月一日的船票\n\n\n[^footnote]: 这是一个 *注脚* 的 **文本**。\n\n[^footnote2]: 这是另一个 *注脚* 的 **文本**。\n\n","slug":"markdown","published":1,"updated":"2016-06-20T03:20:50.000Z","layout":"post","photos":[],"link":"","_id":"cipq7e5oy0008g6u02dznek0k","content":"<p>##markdown 简明语法手册</p>\n<a id=\"more\"></a>\n<p>###1. 斜体和粗体</p>\n<p>使用 <em> 和 *</em> 表示斜体和粗体。</p>\n<p>示例：</p>\n<p>这是 <em>斜体</em>，这是 <strong>粗体</strong>。</p>\n<h3 id=\"2-分级标题\"><a href=\"#2-分级标题\" class=\"headerlink\" title=\"2. 分级标题\"></a>2. 分级标题</h3><p>使用 === 表示一级标题，使用 — 表示二级标题。</p>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是一个一级标题</span><br><span class=\"line\">============================</span><br><span class=\"line\"></span><br><span class=\"line\">这是一个二级标题</span><br><span class=\"line\">--------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\">### 这是一个三级标题</span><br></pre></td></tr></table></figure>\n<p>你也可以选择在行首加井号表示不同级别的标题 (H1-H6)，例如：# H1, ## H2, ### H3，#### H4。</p>\n<h3 id=\"3-外链接\"><a href=\"#3-外链接\" class=\"headerlink\" title=\"3. 外链接\"></a>3. 外链接</h3><p>使用 [描述](链接地址) 为文字增加外链接。</p>\n<p>示例：</p>\n<p>这是去往 <a href=\"http://junyu-node.github.com\" target=\"_blank\" rel=\"external\">本人博客</a> 的链接。</p>\n<h3 id=\"4-无序列表\"><a href=\"#4-无序列表\" class=\"headerlink\" title=\"4. 无序列表\"></a>4. 无序列表</h3><p>使用 *，+，- 表示无序列表。</p>\n<p>示例：</p>\n<ul>\n<li>无序列表项 一</li>\n<li>无序列表项 二</li>\n<li>无序列表项 三</li>\n</ul>\n<h3 id=\"5-有序列表\"><a href=\"#5-有序列表\" class=\"headerlink\" title=\"5. 有序列表\"></a>5. 有序列表</h3><p>使用数字和点表示有序列表。</p>\n<p>示例：</p>\n<ol>\n<li>有序列表项 一</li>\n<li>有序列表项 二</li>\n<li>有序列表项 三</li>\n</ol>\n<h3 id=\"6-文字引用\"><a href=\"#6-文字引用\" class=\"headerlink\" title=\"6. 文字引用\"></a>6. 文字引用</h3><p>使用 &gt; 表示文字引用。</p>\n<p>示例：</p>\n<blockquote>\n<p>野火烧不尽，春风吹又生。</p>\n</blockquote>\n<h3 id=\"7-行内代码块\"><a href=\"#7-行内代码块\" class=\"headerlink\" title=\"7. 行内代码块\"></a>7. 行内代码块</h3><p>使用 `代码` 表示行内代码块。</p>\n<p>示例：</p>\n<p>让我们聊聊 <code>html</code>。</p>\n<h3 id=\"8-代码块\"><a href=\"#8-代码块\" class=\"headerlink\" title=\"8.  代码块\"></a>8.  代码块</h3><p>使用 四个缩进空格 表示代码块。</p>\n<p>示例：</p>\n<pre><code>这是一个代码块，此行左侧有四个不可见的空格。\n</code></pre><h3 id=\"9-插入图像\"><a href=\"#9-插入图像\" class=\"headerlink\" title=\"9.  插入图像\"></a>9.  插入图像</h3><p>使用 ![描述](图片链接地址) 插入图像。</p>\n<p>示例：</p>\n<p><img src=\"https://www.zybuluo.com/static/img/my_head.jpg\" alt=\"我的头像\"></p>\n<h1 id=\"Cmd-Markdown-高阶语法手册\"><a href=\"#Cmd-Markdown-高阶语法手册\" class=\"headerlink\" title=\"Cmd Markdown 高阶语法手册\"></a>Cmd Markdown 高阶语法手册</h1><h3 id=\"1-内容目录\"><a href=\"#1-内容目录\" class=\"headerlink\" title=\"1. 内容目录\"></a>1. 内容目录</h3><p>在段落中填写 <code>[TOC]</code> 以显示全文内容的目录结构。</p>\n<p>[TOC]</p>\n<h3 id=\"2-标签分类\"><a href=\"#2-标签分类\" class=\"headerlink\" title=\"2. 标签分类\"></a>2. 标签分类</h3><p>在编辑区任意行的列首位置输入以下代码给文稿标签：</p>\n<p>标签： 数学 英语 Markdown</p>\n<p>或者</p>\n<p>Tags： 数学 英语 Markdown</p>\n<h3 id=\"3-删除线\"><a href=\"#3-删除线\" class=\"headerlink\" title=\"3. 删除线\"></a>3. 删除线</h3><p>使用 ~~ 表示删除线。</p>\n<p><del>这是一段错误的文本。</del></p>\n<h3 id=\"4-注脚\"><a href=\"#4-注脚\" class=\"headerlink\" title=\"4. 注脚\"></a>4. 注脚</h3><p>使用 [^keyword] 表示注脚。</p>\n<p>这是一个注脚[^footnote]的样例。</p>\n<p>这是第二个注脚[^footnote2]的样例。</p>\n<h3 id=\"5-LaTeX-公式\"><a href=\"#5-LaTeX-公式\" class=\"headerlink\" title=\"5. LaTeX 公式\"></a>5. LaTeX 公式</h3><p>$ 表示行内公式：</p>\n<p>质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。</p>\n<p>$$ 表示整行公式：</p>\n<p>$$\\sum_{i=1}^n a_i=0$$</p>\n<p>$$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2 $$</p>\n<p>$$\\sum^{j-1}<em>{k=0}{\\widehat{\\gamma}</em>{kj} z_k}$$</p>\n<p>访问 <a href=\"http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\" target=\"_blank\" rel=\"external\">MathJax</a> 参考更多使用方法。</p>\n<h3 id=\"6-加强的代码块\"><a href=\"#6-加强的代码块\" class=\"headerlink\" title=\"6. 加强的代码块\"></a>6. 加强的代码块</h3><p>支持四十一种编程语言的语法高亮的显示，行号显示。</p>\n<p>非代码示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install vim-gnome</span><br></pre></td></tr></table></figure>\n<p>Python 示例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@requires_authorization</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">somefunc</span><span class=\"params\">(param1=<span class=\"string\">''</span>, param2=<span class=\"number\">0</span>)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">'''A docstring'''</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> param1 &gt; param2: <span class=\"comment\"># interesting</span></span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'Greater'</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (param2 - param1 + <span class=\"number\">1</span>) <span class=\"keyword\">or</span> <span class=\"keyword\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SomeClass</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>message = <span class=\"string\">'''interpreter</span><br><span class=\"line\"><span class=\"meta\">... </span>prompt'''</span></span><br></pre></td></tr></table></figure>\n<p>JavaScript 示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">* nth element in the fibonacci series.</span><br><span class=\"line\">* @param n &gt;= 0</span><br><span class=\"line\">* @return the nth element, &gt;= 0.</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fib</span>(<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"number\">1</span>, b = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> tmp;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (--n &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    tmp = a;</span><br><span class=\"line\">    a += b;</span><br><span class=\"line\">    b = tmp;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">document</span>.write(fib(<span class=\"number\">10</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-流程图\"><a href=\"#7-流程图\" class=\"headerlink\" title=\"7. 流程图\"></a>7. 流程图</h3><h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st=&gt;start: Start:&gt;https://www.zybuluo.com</span><br><span class=\"line\">io=&gt;inputoutput: verification</span><br><span class=\"line\">op=&gt;operation: Your Operation</span><br><span class=\"line\">cond=&gt;condition: Yes or No?</span><br><span class=\"line\">sub=&gt;subroutine: Your Subroutine</span><br><span class=\"line\">e=&gt;end</span><br><span class=\"line\"></span><br><span class=\"line\">st-&gt;io-&gt;op-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;sub-&gt;io</span><br></pre></td></tr></table></figure>\n<h4 id=\"更多语法参考：流程图语法参考\"><a href=\"#更多语法参考：流程图语法参考\" class=\"headerlink\" title=\"更多语法参考：流程图语法参考\"></a>更多语法参考：<a href=\"http://adrai.github.io/flowchart.js/\" target=\"_blank\" rel=\"external\">流程图语法参考</a></h4><h3 id=\"8-序列图\"><a href=\"#8-序列图\" class=\"headerlink\" title=\"8. 序列图\"></a>8. 序列图</h3><h4 id=\"示例-1\"><a href=\"#示例-1\" class=\"headerlink\" title=\"示例 1\"></a>示例 1</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class=\"line\">Note right of Bob: Bob thinks</span><br><span class=\"line\">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure>\n<h4 id=\"示例-2\"><a href=\"#示例-2\" class=\"headerlink\" title=\"示例 2\"></a>示例 2</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Title: Here is a title</span><br><span class=\"line\">A-&gt;B: Normal line</span><br><span class=\"line\">B--&gt;C: Dashed line</span><br><span class=\"line\">C-&gt;&gt;D: Open arrow</span><br><span class=\"line\">D--&gt;&gt;A: Dashed open arrow</span><br></pre></td></tr></table></figure>\n<h4 id=\"更多语法参考：序列图语法参考\"><a href=\"#更多语法参考：序列图语法参考\" class=\"headerlink\" title=\"更多语法参考：序列图语法参考\"></a>更多语法参考：<a href=\"http://bramp.github.io/js-sequence-diagrams/\" target=\"_blank\" rel=\"external\">序列图语法参考</a></h4><h3 id=\"9-表格支持\"><a href=\"#9-表格支持\" class=\"headerlink\" title=\"9. 表格支持\"></a>9. 表格支持</h3><table>\n<thead>\n<tr>\n<th>项目</th>\n<th style=\"text-align:right\">价格</th>\n<th style=\"text-align:center\">数量</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>计算机</td>\n<td style=\"text-align:right\">\\$1600</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td>手机</td>\n<td style=\"text-align:right\">\\$12</td>\n<td style=\"text-align:center\">12</td>\n</tr>\n<tr>\n<td>管线</td>\n<td style=\"text-align:right\">\\$1</td>\n<td style=\"text-align:center\">234</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"10-定义型列表\"><a href=\"#10-定义型列表\" class=\"headerlink\" title=\"10. 定义型列表\"></a>10. 定义型列表</h3><p>名词 1<br>:   定义 1（左侧有一个可见的冒号和四个不可见的空格）</p>\n<p>代码块 2<br>:   这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格）</p>\n<pre><code>代码块（左侧有八个不可见的空格）\n</code></pre><h3 id=\"11-Html-标签\"><a href=\"#11-Html-标签\" class=\"headerlink\" title=\"11. Html 标签\"></a>11. Html 标签</h3><p>本站支持在 Markdown 语法中嵌套 Html 标签，譬如，你可以用 Html 写一个纵跨两行的表格：</p>\n<pre><code>&lt;table&gt;\n    &lt;tr&gt;\n        &lt;th rowspan=&quot;2&quot;&gt;值班人员&lt;/th&gt;\n        &lt;th&gt;星期一&lt;/th&gt;\n        &lt;th&gt;星期二&lt;/th&gt;\n        &lt;th&gt;星期三&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;李强&lt;/td&gt;\n        &lt;td&gt;张明&lt;/td&gt;\n        &lt;td&gt;王平&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre><table><br>    <tr><br>        <th rowspan=\"2\">值班人员</th><br>        <th>星期一</th><br>        <th>星期二</th><br>        <th>星期三</th><br>    </tr><br>    <tr><br>        <td>李强</td><br>        <td>张明</td><br>        <td>王平</td><br>    </tr><br></table>\n\n<h3 id=\"12-内嵌图标\"><a href=\"#12-内嵌图标\" class=\"headerlink\" title=\"12. 内嵌图标\"></a>12. 内嵌图标</h3><p>本站的图标系统对外开放，在文档中输入</p>\n<pre><code>&lt;i class=&quot;icon-weibo&quot;&gt;&lt;/i&gt;\n</code></pre><p>即显示微博的图标： <i class=\"icon-weibo icon-2x\"></i></p>\n<p>替换 上述 <code>i 标签</code> 内的 <code>icon-weibo</code> 以显示不同的图标，例如：</p>\n<pre><code>&lt;i class=&quot;icon-renren&quot;&gt;&lt;/i&gt;\n</code></pre><p>即显示人人的图标： <i class=\"icon-renren icon-2x\"></i></p>\n<p>更多的图标和玩法可以参看 <a href=\"http://fortawesome.github.io/Font-Awesome/3.2.1/icons/\" target=\"_blank\" rel=\"external\">font-awesome</a> 官方网站。</p>\n<h3 id=\"13-待办事宜-Todo-列表\"><a href=\"#13-待办事宜-Todo-列表\" class=\"headerlink\" title=\"13. 待办事宜 Todo 列表\"></a>13. 待办事宜 Todo 列表</h3><p>使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表，并且支持子列表嵌套以及混用Markdown语法，例如：</p>\n<pre><code>- [ ] **Cmd Markdown 开发**\n    - [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率\n    - [ ] 支持以 PDF 格式导出文稿\n    - [x] 新增Todo列表功能 [语法参考](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments)\n    - [x] 改进 LaTex 功能\n        - [x] 修复 LaTex 公式渲染问题\n        - [x] 新增 LaTex 公式编号功能 [语法参考](http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers)\n- [ ] **七月旅行准备**\n    - [ ] 准备邮轮上需要携带的物品\n    - [ ] 浏览日本免税店的物品\n    - [x] 购买蓝宝石公主号七月一日的船票\n</code></pre><p>对应显示如下待办事宜 Todo 列表：</p>\n<ul>\n<li>[ ] <strong>Cmd Markdown 开发</strong><ul>\n<li>[ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li>\n<li>[ ] 支持以 PDF 格式导出文稿</li>\n<li>[x] 新增Todo列表功能 <a href=\"https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments\" target=\"_blank\" rel=\"external\">语法参考</a></li>\n<li>[x] 改进 LaTex 功能<ul>\n<li>[x] 修复 LaTex 公式渲染问题</li>\n<li>[x] 新增 LaTex 公式编号功能 <a href=\"http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers\" target=\"_blank\" rel=\"external\">语法参考</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>[ ] <strong>七月旅行准备</strong><ul>\n<li>[ ] 准备邮轮上需要携带的物品</li>\n<li>[ ] 浏览日本免税店的物品</li>\n<li>[x] 购买蓝宝石公主号七月一日的船票</li>\n</ul>\n</li>\n</ul>\n<p>[^footnote]: 这是一个 <em>注脚</em> 的 <strong>文本</strong>。</p>\n<p>[^footnote2]: 这是另一个 <em>注脚</em> 的 <strong>文本</strong>。</p>\n","excerpt":"<p>##markdown 简明语法手册</p>","more":"<p>###1. 斜体和粗体</p>\n<p>使用 <em> 和 *</em> 表示斜体和粗体。</p>\n<p>示例：</p>\n<p>这是 <em>斜体</em>，这是 <strong>粗体</strong>。</p>\n<h3 id=\"2-分级标题\"><a href=\"#2-分级标题\" class=\"headerlink\" title=\"2. 分级标题\"></a>2. 分级标题</h3><p>使用 === 表示一级标题，使用 — 表示二级标题。</p>\n<p>示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是一个一级标题</span><br><span class=\"line\">============================</span><br><span class=\"line\"></span><br><span class=\"line\">这是一个二级标题</span><br><span class=\"line\">--------------------------------------------------</span><br><span class=\"line\"></span><br><span class=\"line\">### 这是一个三级标题</span><br></pre></td></tr></table></figure>\n<p>你也可以选择在行首加井号表示不同级别的标题 (H1-H6)，例如：# H1, ## H2, ### H3，#### H4。</p>\n<h3 id=\"3-外链接\"><a href=\"#3-外链接\" class=\"headerlink\" title=\"3. 外链接\"></a>3. 外链接</h3><p>使用 [描述](链接地址) 为文字增加外链接。</p>\n<p>示例：</p>\n<p>这是去往 <a href=\"http://junyu-node.github.com\">本人博客</a> 的链接。</p>\n<h3 id=\"4-无序列表\"><a href=\"#4-无序列表\" class=\"headerlink\" title=\"4. 无序列表\"></a>4. 无序列表</h3><p>使用 *，+，- 表示无序列表。</p>\n<p>示例：</p>\n<ul>\n<li>无序列表项 一</li>\n<li>无序列表项 二</li>\n<li>无序列表项 三</li>\n</ul>\n<h3 id=\"5-有序列表\"><a href=\"#5-有序列表\" class=\"headerlink\" title=\"5. 有序列表\"></a>5. 有序列表</h3><p>使用数字和点表示有序列表。</p>\n<p>示例：</p>\n<ol>\n<li>有序列表项 一</li>\n<li>有序列表项 二</li>\n<li>有序列表项 三</li>\n</ol>\n<h3 id=\"6-文字引用\"><a href=\"#6-文字引用\" class=\"headerlink\" title=\"6. 文字引用\"></a>6. 文字引用</h3><p>使用 &gt; 表示文字引用。</p>\n<p>示例：</p>\n<blockquote>\n<p>野火烧不尽，春风吹又生。</p>\n</blockquote>\n<h3 id=\"7-行内代码块\"><a href=\"#7-行内代码块\" class=\"headerlink\" title=\"7. 行内代码块\"></a>7. 行内代码块</h3><p>使用 `代码` 表示行内代码块。</p>\n<p>示例：</p>\n<p>让我们聊聊 <code>html</code>。</p>\n<h3 id=\"8-代码块\"><a href=\"#8-代码块\" class=\"headerlink\" title=\"8.  代码块\"></a>8.  代码块</h3><p>使用 四个缩进空格 表示代码块。</p>\n<p>示例：</p>\n<pre><code>这是一个代码块，此行左侧有四个不可见的空格。\n</code></pre><h3 id=\"9-插入图像\"><a href=\"#9-插入图像\" class=\"headerlink\" title=\"9.  插入图像\"></a>9.  插入图像</h3><p>使用 ![描述](图片链接地址) 插入图像。</p>\n<p>示例：</p>\n<p><img src=\"https://www.zybuluo.com/static/img/my_head.jpg\" alt=\"我的头像\"></p>\n<h1 id=\"Cmd-Markdown-高阶语法手册\"><a href=\"#Cmd-Markdown-高阶语法手册\" class=\"headerlink\" title=\"Cmd Markdown 高阶语法手册\"></a>Cmd Markdown 高阶语法手册</h1><h3 id=\"1-内容目录\"><a href=\"#1-内容目录\" class=\"headerlink\" title=\"1. 内容目录\"></a>1. 内容目录</h3><p>在段落中填写 <code>[TOC]</code> 以显示全文内容的目录结构。</p>\n<p>[TOC]</p>\n<h3 id=\"2-标签分类\"><a href=\"#2-标签分类\" class=\"headerlink\" title=\"2. 标签分类\"></a>2. 标签分类</h3><p>在编辑区任意行的列首位置输入以下代码给文稿标签：</p>\n<p>标签： 数学 英语 Markdown</p>\n<p>或者</p>\n<p>Tags： 数学 英语 Markdown</p>\n<h3 id=\"3-删除线\"><a href=\"#3-删除线\" class=\"headerlink\" title=\"3. 删除线\"></a>3. 删除线</h3><p>使用 ~~ 表示删除线。</p>\n<p><del>这是一段错误的文本。</del></p>\n<h3 id=\"4-注脚\"><a href=\"#4-注脚\" class=\"headerlink\" title=\"4. 注脚\"></a>4. 注脚</h3><p>使用 [^keyword] 表示注脚。</p>\n<p>这是一个注脚[^footnote]的样例。</p>\n<p>这是第二个注脚[^footnote2]的样例。</p>\n<h3 id=\"5-LaTeX-公式\"><a href=\"#5-LaTeX-公式\" class=\"headerlink\" title=\"5. LaTeX 公式\"></a>5. LaTeX 公式</h3><p>$ 表示行内公式：</p>\n<p>质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。</p>\n<p>$$ 表示整行公式：</p>\n<p>$$\\sum_{i=1}^n a_i=0$$</p>\n<p>$$f(x_1,x_x,\\ldots,x_n) = x_1^2 + x_2^2 + \\cdots + x_n^2 $$</p>\n<p>$$\\sum^{j-1}<em>{k=0}{\\widehat{\\gamma}</em>{kj} z_k}$$</p>\n<p>访问 <a href=\"http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference\">MathJax</a> 参考更多使用方法。</p>\n<h3 id=\"6-加强的代码块\"><a href=\"#6-加强的代码块\" class=\"headerlink\" title=\"6. 加强的代码块\"></a>6. 加强的代码块</h3><p>支持四十一种编程语言的语法高亮的显示，行号显示。</p>\n<p>非代码示例：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ sudo apt-get install vim-gnome</span><br></pre></td></tr></table></figure>\n<p>Python 示例：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@requires_authorization</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">somefunc</span><span class=\"params\">(param1=<span class=\"string\">''</span>, param2=<span class=\"number\">0</span>)</span>:</span></span><br><span class=\"line\">    <span class=\"string\">'''A docstring'''</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> param1 &gt; param2: <span class=\"comment\"># interesting</span></span><br><span class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'Greater'</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (param2 - param1 + <span class=\"number\">1</span>) <span class=\"keyword\">or</span> <span class=\"keyword\">None</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SomeClass</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">pass</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">&gt;&gt;&gt; </span>message = <span class=\"string\">'''interpreter</span><br><span class=\"line\"><span class=\"meta\">... </span>prompt'''</span></span><br></pre></td></tr></table></figure>\n<p>JavaScript 示例：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\">* nth element in the fibonacci series.</span><br><span class=\"line\">* @param n &gt;= 0</span><br><span class=\"line\">* @return the nth element, &gt;= 0.</span><br><span class=\"line\">*/</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">fib</span>(<span class=\"params\">n</span>) </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> a = <span class=\"number\">1</span>, b = <span class=\"number\">1</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> tmp;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> (--n &gt;= <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    tmp = a;</span><br><span class=\"line\">    a += b;</span><br><span class=\"line\">    b = tmp;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">document</span>.write(fib(<span class=\"number\">10</span>));</span><br></pre></td></tr></table></figure>\n<h3 id=\"7-流程图\"><a href=\"#7-流程图\" class=\"headerlink\" title=\"7. 流程图\"></a>7. 流程图</h3><h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">st=&gt;start: Start:&gt;https://www.zybuluo.com</span><br><span class=\"line\">io=&gt;inputoutput: verification</span><br><span class=\"line\">op=&gt;operation: Your Operation</span><br><span class=\"line\">cond=&gt;condition: Yes or No?</span><br><span class=\"line\">sub=&gt;subroutine: Your Subroutine</span><br><span class=\"line\">e=&gt;end</span><br><span class=\"line\"></span><br><span class=\"line\">st-&gt;io-&gt;op-&gt;cond</span><br><span class=\"line\">cond(yes)-&gt;e</span><br><span class=\"line\">cond(no)-&gt;sub-&gt;io</span><br></pre></td></tr></table></figure>\n<h4 id=\"更多语法参考：流程图语法参考\"><a href=\"#更多语法参考：流程图语法参考\" class=\"headerlink\" title=\"更多语法参考：流程图语法参考\"></a>更多语法参考：<a href=\"http://adrai.github.io/flowchart.js/\">流程图语法参考</a></h4><h3 id=\"8-序列图\"><a href=\"#8-序列图\" class=\"headerlink\" title=\"8. 序列图\"></a>8. 序列图</h3><h4 id=\"示例-1\"><a href=\"#示例-1\" class=\"headerlink\" title=\"示例 1\"></a>示例 1</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class=\"line\">Note right of Bob: Bob thinks</span><br><span class=\"line\">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure>\n<h4 id=\"示例-2\"><a href=\"#示例-2\" class=\"headerlink\" title=\"示例 2\"></a>示例 2</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Title: Here is a title</span><br><span class=\"line\">A-&gt;B: Normal line</span><br><span class=\"line\">B--&gt;C: Dashed line</span><br><span class=\"line\">C-&gt;&gt;D: Open arrow</span><br><span class=\"line\">D--&gt;&gt;A: Dashed open arrow</span><br></pre></td></tr></table></figure>\n<h4 id=\"更多语法参考：序列图语法参考\"><a href=\"#更多语法参考：序列图语法参考\" class=\"headerlink\" title=\"更多语法参考：序列图语法参考\"></a>更多语法参考：<a href=\"http://bramp.github.io/js-sequence-diagrams/\">序列图语法参考</a></h4><h3 id=\"9-表格支持\"><a href=\"#9-表格支持\" class=\"headerlink\" title=\"9. 表格支持\"></a>9. 表格支持</h3><table>\n<thead>\n<tr>\n<th>项目</th>\n<th style=\"text-align:right\">价格</th>\n<th style=\"text-align:center\">数量</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>计算机</td>\n<td style=\"text-align:right\">\\$1600</td>\n<td style=\"text-align:center\">5</td>\n</tr>\n<tr>\n<td>手机</td>\n<td style=\"text-align:right\">\\$12</td>\n<td style=\"text-align:center\">12</td>\n</tr>\n<tr>\n<td>管线</td>\n<td style=\"text-align:right\">\\$1</td>\n<td style=\"text-align:center\">234</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"10-定义型列表\"><a href=\"#10-定义型列表\" class=\"headerlink\" title=\"10. 定义型列表\"></a>10. 定义型列表</h3><p>名词 1<br>:   定义 1（左侧有一个可见的冒号和四个不可见的空格）</p>\n<p>代码块 2<br>:   这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格）</p>\n<pre><code>代码块（左侧有八个不可见的空格）\n</code></pre><h3 id=\"11-Html-标签\"><a href=\"#11-Html-标签\" class=\"headerlink\" title=\"11. Html 标签\"></a>11. Html 标签</h3><p>本站支持在 Markdown 语法中嵌套 Html 标签，譬如，你可以用 Html 写一个纵跨两行的表格：</p>\n<pre><code>&lt;table&gt;\n    &lt;tr&gt;\n        &lt;th rowspan=&quot;2&quot;&gt;值班人员&lt;/th&gt;\n        &lt;th&gt;星期一&lt;/th&gt;\n        &lt;th&gt;星期二&lt;/th&gt;\n        &lt;th&gt;星期三&lt;/th&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;李强&lt;/td&gt;\n        &lt;td&gt;张明&lt;/td&gt;\n        &lt;td&gt;王平&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n</code></pre><table><br>    <tr><br>        <th rowspan=\"2\">值班人员</th><br>        <th>星期一</th><br>        <th>星期二</th><br>        <th>星期三</th><br>    </tr><br>    <tr><br>        <td>李强</td><br>        <td>张明</td><br>        <td>王平</td><br>    </tr><br></table>\n\n<h3 id=\"12-内嵌图标\"><a href=\"#12-内嵌图标\" class=\"headerlink\" title=\"12. 内嵌图标\"></a>12. 内嵌图标</h3><p>本站的图标系统对外开放，在文档中输入</p>\n<pre><code>&lt;i class=&quot;icon-weibo&quot;&gt;&lt;/i&gt;\n</code></pre><p>即显示微博的图标： <i class=\"icon-weibo icon-2x\"></i></p>\n<p>替换 上述 <code>i 标签</code> 内的 <code>icon-weibo</code> 以显示不同的图标，例如：</p>\n<pre><code>&lt;i class=&quot;icon-renren&quot;&gt;&lt;/i&gt;\n</code></pre><p>即显示人人的图标： <i class=\"icon-renren icon-2x\"></i></p>\n<p>更多的图标和玩法可以参看 <a href=\"http://fortawesome.github.io/Font-Awesome/3.2.1/icons/\">font-awesome</a> 官方网站。</p>\n<h3 id=\"13-待办事宜-Todo-列表\"><a href=\"#13-待办事宜-Todo-列表\" class=\"headerlink\" title=\"13. 待办事宜 Todo 列表\"></a>13. 待办事宜 Todo 列表</h3><p>使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表，并且支持子列表嵌套以及混用Markdown语法，例如：</p>\n<pre><code>- [ ] **Cmd Markdown 开发**\n    - [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率\n    - [ ] 支持以 PDF 格式导出文稿\n    - [x] 新增Todo列表功能 [语法参考](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments)\n    - [x] 改进 LaTex 功能\n        - [x] 修复 LaTex 公式渲染问题\n        - [x] 新增 LaTex 公式编号功能 [语法参考](http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers)\n- [ ] **七月旅行准备**\n    - [ ] 准备邮轮上需要携带的物品\n    - [ ] 浏览日本免税店的物品\n    - [x] 购买蓝宝石公主号七月一日的船票\n</code></pre><p>对应显示如下待办事宜 Todo 列表：</p>\n<ul>\n<li>[ ] <strong>Cmd Markdown 开发</strong><ul>\n<li>[ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li>\n<li>[ ] 支持以 PDF 格式导出文稿</li>\n<li>[x] 新增Todo列表功能 <a href=\"https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments\">语法参考</a></li>\n<li>[x] 改进 LaTex 功能<ul>\n<li>[x] 修复 LaTex 公式渲染问题</li>\n<li>[x] 新增 LaTex 公式编号功能 <a href=\"http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers\">语法参考</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>[ ] <strong>七月旅行准备</strong><ul>\n<li>[ ] 准备邮轮上需要携带的物品</li>\n<li>[ ] 浏览日本免税店的物品</li>\n<li>[x] 购买蓝宝石公主号七月一日的船票</li>\n</ul>\n</li>\n</ul>\n<p>[^footnote]: 这是一个 <em>注脚</em> 的 <strong>文本</strong>。</p>\n<p>[^footnote2]: 这是另一个 <em>注脚</em> 的 <strong>文本</strong>。</p>"},{"title":"正则","date":"2016-06-20T07:10:45.000Z","comments":1,"_content":"\n对正则的一些总结和简单应用\n<!--more-->\n\n1定义\n======================\n\n<pre>\n    var reg=/\\w+/g ;\n    var reg1=regExp('\\\\w+','g);\n</pre>\n\n第一种定义方式 没有办法传参\n第二种可以传参\n一般不需要传参的话我一般用第一种定义正则\n\n2 正则简单的基础\n===============\n2.1 开始符&结束符\n-------------\n^      匹配字符串的开头 如果设置了RegExp对象的Multiline属性， 也匹配\\n \\r 后的位置\n$      匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“\\n”或“\\r”之前的位置。\n```JavaScript\n    var reg=/^\\w+/gm;\n    var reg1=/^\\w+/g\n    var str='sdasds1234523454\\nsadhdasdj';\n    var arr=str.match(reg);\n    console.log(arr)//[ 'sdasds1234523454', 'sadhdasdj' ]\n\n    var arr1=str.match(reg1);\n    console.log(arr1)//['sdasds1234523454\\nsadhdasdj']\n```\n2.2量词\n-------\n ```JavaScript\n * 匹配前面的子表达式任意次。例如，zo*能匹配“z”，“zo”以及“zoo”，但是不匹配“bo”。*等价于{0,}\n + 匹配前面的子表达式至少一次 等价于 {1,}\n ? 可有可无 等价于{0,1}\n {n} n个\n｛n,｝ 至少n个\n {n,m} n-m个\n ```\n\n2.3字符缩写\n----------------\n ```JavaScript\n  x|y 或的关系 等价于 [xy]\n [^xy] 非xy\n [a-z] a到 z\n  [^a-z] 非 a-z\n\n  \\b 匹配一个单词边界，也就是指单词和空格间的位置（即正则表达式的“匹配”有两种概念，一种是匹配字符，一种是匹配位置，这里的\\b就是匹配位置的）。例如，“er\\b”可以匹配“never”中的“er”，但不能匹配“verb”中的“er”。\n  \\B 匹配非单词边界。“er\\B”能匹配“verb”中的“er”，但不能匹配“never”中的“er”。\n\n\n  \\d 匹配一个数字字符。等价于[0-9]。grep 要加上-P，perl正则支持\n  \\D 匹配一个非数字字符。等价于[^0-9]。grep要加上-Pperl正则支持\n  \\n 匹配一个换行符。等价于\\x0a和\\cJ。\n  \\r 匹配一个回车符。等价于\\x0d和\\cM。\n  \\s 匹配任何不可见字符，包括空格、制表符、换页符等等。等价于[ \\f\\n\\r\\t\\v]。\n  \\S 匹配任何可见字符。等价于[^ \\f\\n\\r\\t\\v]。\n  \\w 匹配包括下划线的任何单词字符。类似但不等价于“[A-Za-z0-9_]”，这里的\"单词\"字符使用Unicode字符集。\n  \\W 匹配任何非单词字符。等价于“[^A-Za-z0-9_]”。\n```\n2.4 参数\n---------------\n2.4.1 g\n    g 只影响于 exec、match 方法。\n\n    若不指定 g，则：每次调用 exec 都只返回第一个匹配；match 也是只返回第一个匹配。\n\n    若指定 g，则：每次调用 exec 都从上一个匹配之后查找新的匹配；match 则是返回所有的匹配。\n\n    还有一种情况，就是使用 string 对象的 replace 方法时，指定 g 表示替换所有。\n2.4.2 i\n\n  参数 i 是指忽略大小写，注意仅是忽略大小写，并不忽略全半角。\n2.4.3 m\n    附加参数m，表明可以进行多行匹配，但是这个只有当使用^和$模式时才会起作用，在其他的模式中，加不加入m都可以进行多行匹配（其实说多行的字符串也是一个普通字符串）\n 3.贪婪非贪婪模式\n ================\n```JavaScript\n ? 当该字符紧跟在任何一个其他限制符\n  （*,+,?，{n}，{n,}，{n,m}）后面时，\n  匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串\n  ，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。\n  例如，对于字符串“oooo”，“o+?”将匹配单个“o”，\n  而“o+”将匹配所有“o”。\n\n var reg=/[a-zA-Z]+?/g;\n var reg1=/[a-zA-Z]+/g\n var str='sasdqwew23q3e4a6s7d9asdas';\n console.log(str.match(reg));\n //[ 's','a','s','d','q','w','e','w','q','e','a', 's'...]\n\n console.log(str.match(reg1));\n //[ 'sasdqwew', 'q', 'e', 'a', 's', 'd', 'asdas' ]\n ```\n\n 4.点\n ============\n ```JavaScript\n .点 匹配除“\\r\\n”之外的任何单个字符。要匹配包括“\\r\\n”在内的任何字符，请使用像“[\\s\\S]”的模式。\n\n var reg=/.+/g;\n var reg1=/[\\s\\S]+/g;\n console.log('assdlk8554867486\\n\\rasdhuijk.lkashjdsadnlpo./'.match(reg));\n //[ 'assdlk8554867486', 'asdhuijk.lkashjdsadnlpo./' ]\n console.log('assdlk8554867486\\n\\rasdhuijk.lkashjdsadnlpo./'.match(reg1));\n //[ 'assdlk8554867486\\n\\rasdhuijk.lkashjdsadnlpo./' ]\n ```\n5.捕获非捕获\n===============\n\n ```JavaScript\n //(pattern) 匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“\\(”或“\\)”。\n\n\n //var reg=/([a-z]+)(\\d*)/g;\n\n //var str='sdsda;;sdahj8202xdsa9fdsfsd5sdf12sfdsd';\n //console.log(reg.test(str));//true\n //console.log(RegExp.$1);//sdahj\n //console.log(RegExp.$2);//8202\n\n\n // (?:pattern) 非获取匹配，匹配pattern但不获取匹配结果，不进行存储供以后使用。这在使用或字符“(|)”来组合一个模式的各个部分是很有用。例如“industr(?:y|ies)”就是一个比“industry|industries”更简略的表达式。\n\n\n //var reg=/([a-z]+)(?:8|\\d+)/g;\n\n //console.log(str.match(reg));//[ 'sdahj8202', 'xdsa9', 'fdsfsd5', 'sdf12' ]\n\n //(?=pattern)非获取匹配，正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串，该匹配不需要获取供以后使用。\n // 例如，“Windows(?=95|98|NT|2000)”能匹配“Windows2000”中的“Windows”，\n // 但不能匹配“Windows3.1”中的“Windows”。\n // 预查不消耗字符，也就是说，\n // 在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，\n // 而不是从包含预查的字符之后开始。\n //var reg1=/([a-z]+)(?=\\d+)/g;\n\n //console.log(str.match(reg1)); //[ 'sdahj', 'xdsa', 'fdsfsd', 'sdf' ]\n //(?!pattern)非获取匹配，正向否定预查，\n // 在任何不匹配pattern的字符串开始处匹配查找字符串，\n // 该匹配不需要获取供以后使用。例如“Windows(?!95|98|NT|2000)”\n // 能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。\n ```\n 6.常用正则\n =========\n ```JavaScript\n 验证手机号码：\"^1[3|4|5|7|8][0-9]\\\\d{8}$\"\n 验证身份证号（15位或18位数字）：\"\\\\d{14}[[0-9],0-9xX]\"\n 验证Email地址：(\"^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$\")\n\n 验证URL：\"^https?://([\\w-]+\\.)+[\\w-]+(/[\\w-./?%&=]*)?$\"\n 匹配空白行的正则表达式：\\n\\s*\\r\n\n 匹配腾讯QQ号：[1-9][0-9]{4,}\n ```\n 7.正则的方法\n ============\n ```JavaScript\n // 正则的方法\n // test 判断\n\n //eg\n var str='4567ssdsc85d 8s5s';\n var reg=/(\\d+)([a-z]*)/g;\n\n console.log(reg.test(str));//true;\n\n\n\n //exec  检索字符串中指定的值。返回找到的值，并确定其位置。\n //如果 exec() 找到了匹配的文本，\n // 则返回一个结果数组。\n // 否则，返回 null。\n // 此数组的第 0 个元素是与正则表达式相匹配的文本，\n // 第 1 个元素是与 RegExpObject 的第 1 个子表达式相匹配的文本（如果有的话），\n // 第 2 个元素是与 RegExpObject 的第 2 个子表达式相匹配的文本（如果有的话），\n // 以此类推。除了数组元素和 length 属性之外，exec() 方法还返回两个属性\n // 。index 属性声明的是匹配文本的第一个字符的位置。\n // input 属性则存放的是被检索的字符串 string。\n // 我们可以看得出，在调用非全局的 RegExp 对象的 exec() 方法时，\n // 返回的数组与调用方法 String.match() 返回的数组是相同的。\n console.log(reg.exec(str)); //[ '4567ssdsc','4567','ssdsc',index: 0,input: '4567ssdsc85d 8s5s' ]\n\n\n\n //compile 编译正则表达式。\n\n\n\n // str的方法\n // match 返回匹配的数组\n\n     console.log(str.match(reg));//[ '4567', '85', '8', '5' ]\n // replace() 方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。\n\n ```\n\n 8.replace\n ==========\n ```JavaScript\n // replace 替换\n\n var str='hello,world hello,bob'\n var str1=str.replace('h','H');\n console.log(str1) //Hello,world hello,bob\n\n var str2=str.replace(/h/,'H');\n console.log(str2) //Hello,world hello,bob\n //全局匹配查找并替换\n console.log(str.replace(/h/g,'H')) // Hello,world Hello,bob\n console.log(str.replace(/b/g,'$`')) //  ello,world hello,world ello,bob\n // leftContext\n // 是当前表达式模式最后一个匹配字符串左边的所有内容，\n // 可以简写为$`（其中\"'\"为键盘上\"Esc\"下边的反单引号）。\n // 初始值为空字符串\"\"。每次成功匹配时，其属性值都会随之改变。\n\n console.log(str.replace(/h/g,\"$'\"))\n ////rightContext\n // 是当前表达式模式最后一个匹配字符串右边的所有内容，可以简写为$'。\n // 初始值为空字符串\"\"。每次成功匹配时，其属性值都会随之改变。\n\n\n function replacer(match, p1, p2, p3, offset, string){\n\n     // match 匹配的字串（对应$&）\n     // p1, p2, ..假如replace()方法的第一个参数是一个RegExp 对象，则代表第n个括号匹配的字符串。（对应于上述的$1，$2等。）\n     // offset 匹配到的子字符串在原字符串中的偏移量。（比如，如果原字符串是\"abcd\"，匹配到的子字符串时\"bc\"，那么这个参数将时1）\n     // string被匹配的原字符串。\n\n     console.log(match); // abc12345#$*%\n     console.log(p1);    // abc\n     console.log(p2);    // 12345\n     console.log(p3);    // #$*%\n     console.log(string);// abc12345#$*%\n\n     return [p1, p2, p3].join(' - ');\n\n }\n\n var newString = 'abc12345#$*%'.replace(/([^\\d]*)(\\d*)([^\\w]*)/,replacer);\n\n\n //alert(newString);\n\n //////////////////////////////////\n\n /*\n  var re = /apples/gi;\n  var str = \"Apples are round, and apples are juicy.\";\n  var newstr = str.replace(re, \"oranges\");\n  */\n\n //alert(newstr);\n\n //////////////////////////////////\n\n /*var str = \"Apples are round, and apples are juicy.\";\n  var newstr = str.replace(\"apples\", \"oranges\", \"gi\");  // 这个不兼容IE\n  alert(newstr);*/\n\n\n //////////////////////////////////\n\n // 交换字符串中的两个单词\n /*var re = /(\\w+)\\s(\\w+)/;\n  var str = \"John Smith\";\n  var newstr = str.replace(re, \"$2 $1\");\n  alert(newstr);\n  */\n  ```\n\n  9.反向应用\n  =======\n\n\n  ```JavaScript\n\n  /**\n   * Created by Administrator on 2016/6/16.\n   */\n  // \\1，\\2 对序号为1和2的捕获组的反向引用\n\n  //“(a|b)\\1”在匹配“abaa”时，匹配成功，匹配到的结果是“aa”。\n  // “(a|b)”在尝试匹配时，虽然既可以匹配“a”，也可以匹配“b”，\n  // 但是在进行反向引用时，对应()中匹配的内容已经是固定的了。\n\n  var reg=/(a|b)\\1/g;\n  var reg2=/(a|b)(\\w)\\2/g;\n  var str='abaabbdsfsdfsd';\n  console.log(reg)\n\n  console.log(str.match(reg)); [ 'aa', 'bb' ]\n  console.log(str.match(reg2)) [ 'baa' ]\n  ```\n","source":"_posts/regExp.md","raw":"---\ntitle: 正则\ndate: 2016-06-20 15:10:45\ntags: [regRxp,正则,js]\ncomments: true\n---\n\n对正则的一些总结和简单应用\n<!--more-->\n\n1定义\n======================\n\n<pre>\n    var reg=/\\w+/g ;\n    var reg1=regExp('\\\\w+','g);\n</pre>\n\n第一种定义方式 没有办法传参\n第二种可以传参\n一般不需要传参的话我一般用第一种定义正则\n\n2 正则简单的基础\n===============\n2.1 开始符&结束符\n-------------\n^      匹配字符串的开头 如果设置了RegExp对象的Multiline属性， 也匹配\\n \\r 后的位置\n$      匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“\\n”或“\\r”之前的位置。\n```JavaScript\n    var reg=/^\\w+/gm;\n    var reg1=/^\\w+/g\n    var str='sdasds1234523454\\nsadhdasdj';\n    var arr=str.match(reg);\n    console.log(arr)//[ 'sdasds1234523454', 'sadhdasdj' ]\n\n    var arr1=str.match(reg1);\n    console.log(arr1)//['sdasds1234523454\\nsadhdasdj']\n```\n2.2量词\n-------\n ```JavaScript\n * 匹配前面的子表达式任意次。例如，zo*能匹配“z”，“zo”以及“zoo”，但是不匹配“bo”。*等价于{0,}\n + 匹配前面的子表达式至少一次 等价于 {1,}\n ? 可有可无 等价于{0,1}\n {n} n个\n｛n,｝ 至少n个\n {n,m} n-m个\n ```\n\n2.3字符缩写\n----------------\n ```JavaScript\n  x|y 或的关系 等价于 [xy]\n [^xy] 非xy\n [a-z] a到 z\n  [^a-z] 非 a-z\n\n  \\b 匹配一个单词边界，也就是指单词和空格间的位置（即正则表达式的“匹配”有两种概念，一种是匹配字符，一种是匹配位置，这里的\\b就是匹配位置的）。例如，“er\\b”可以匹配“never”中的“er”，但不能匹配“verb”中的“er”。\n  \\B 匹配非单词边界。“er\\B”能匹配“verb”中的“er”，但不能匹配“never”中的“er”。\n\n\n  \\d 匹配一个数字字符。等价于[0-9]。grep 要加上-P，perl正则支持\n  \\D 匹配一个非数字字符。等价于[^0-9]。grep要加上-Pperl正则支持\n  \\n 匹配一个换行符。等价于\\x0a和\\cJ。\n  \\r 匹配一个回车符。等价于\\x0d和\\cM。\n  \\s 匹配任何不可见字符，包括空格、制表符、换页符等等。等价于[ \\f\\n\\r\\t\\v]。\n  \\S 匹配任何可见字符。等价于[^ \\f\\n\\r\\t\\v]。\n  \\w 匹配包括下划线的任何单词字符。类似但不等价于“[A-Za-z0-9_]”，这里的\"单词\"字符使用Unicode字符集。\n  \\W 匹配任何非单词字符。等价于“[^A-Za-z0-9_]”。\n```\n2.4 参数\n---------------\n2.4.1 g\n    g 只影响于 exec、match 方法。\n\n    若不指定 g，则：每次调用 exec 都只返回第一个匹配；match 也是只返回第一个匹配。\n\n    若指定 g，则：每次调用 exec 都从上一个匹配之后查找新的匹配；match 则是返回所有的匹配。\n\n    还有一种情况，就是使用 string 对象的 replace 方法时，指定 g 表示替换所有。\n2.4.2 i\n\n  参数 i 是指忽略大小写，注意仅是忽略大小写，并不忽略全半角。\n2.4.3 m\n    附加参数m，表明可以进行多行匹配，但是这个只有当使用^和$模式时才会起作用，在其他的模式中，加不加入m都可以进行多行匹配（其实说多行的字符串也是一个普通字符串）\n 3.贪婪非贪婪模式\n ================\n```JavaScript\n ? 当该字符紧跟在任何一个其他限制符\n  （*,+,?，{n}，{n,}，{n,m}）后面时，\n  匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串\n  ，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。\n  例如，对于字符串“oooo”，“o+?”将匹配单个“o”，\n  而“o+”将匹配所有“o”。\n\n var reg=/[a-zA-Z]+?/g;\n var reg1=/[a-zA-Z]+/g\n var str='sasdqwew23q3e4a6s7d9asdas';\n console.log(str.match(reg));\n //[ 's','a','s','d','q','w','e','w','q','e','a', 's'...]\n\n console.log(str.match(reg1));\n //[ 'sasdqwew', 'q', 'e', 'a', 's', 'd', 'asdas' ]\n ```\n\n 4.点\n ============\n ```JavaScript\n .点 匹配除“\\r\\n”之外的任何单个字符。要匹配包括“\\r\\n”在内的任何字符，请使用像“[\\s\\S]”的模式。\n\n var reg=/.+/g;\n var reg1=/[\\s\\S]+/g;\n console.log('assdlk8554867486\\n\\rasdhuijk.lkashjdsadnlpo./'.match(reg));\n //[ 'assdlk8554867486', 'asdhuijk.lkashjdsadnlpo./' ]\n console.log('assdlk8554867486\\n\\rasdhuijk.lkashjdsadnlpo./'.match(reg1));\n //[ 'assdlk8554867486\\n\\rasdhuijk.lkashjdsadnlpo./' ]\n ```\n5.捕获非捕获\n===============\n\n ```JavaScript\n //(pattern) 匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“\\(”或“\\)”。\n\n\n //var reg=/([a-z]+)(\\d*)/g;\n\n //var str='sdsda;;sdahj8202xdsa9fdsfsd5sdf12sfdsd';\n //console.log(reg.test(str));//true\n //console.log(RegExp.$1);//sdahj\n //console.log(RegExp.$2);//8202\n\n\n // (?:pattern) 非获取匹配，匹配pattern但不获取匹配结果，不进行存储供以后使用。这在使用或字符“(|)”来组合一个模式的各个部分是很有用。例如“industr(?:y|ies)”就是一个比“industry|industries”更简略的表达式。\n\n\n //var reg=/([a-z]+)(?:8|\\d+)/g;\n\n //console.log(str.match(reg));//[ 'sdahj8202', 'xdsa9', 'fdsfsd5', 'sdf12' ]\n\n //(?=pattern)非获取匹配，正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串，该匹配不需要获取供以后使用。\n // 例如，“Windows(?=95|98|NT|2000)”能匹配“Windows2000”中的“Windows”，\n // 但不能匹配“Windows3.1”中的“Windows”。\n // 预查不消耗字符，也就是说，\n // 在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，\n // 而不是从包含预查的字符之后开始。\n //var reg1=/([a-z]+)(?=\\d+)/g;\n\n //console.log(str.match(reg1)); //[ 'sdahj', 'xdsa', 'fdsfsd', 'sdf' ]\n //(?!pattern)非获取匹配，正向否定预查，\n // 在任何不匹配pattern的字符串开始处匹配查找字符串，\n // 该匹配不需要获取供以后使用。例如“Windows(?!95|98|NT|2000)”\n // 能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。\n ```\n 6.常用正则\n =========\n ```JavaScript\n 验证手机号码：\"^1[3|4|5|7|8][0-9]\\\\d{8}$\"\n 验证身份证号（15位或18位数字）：\"\\\\d{14}[[0-9],0-9xX]\"\n 验证Email地址：(\"^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$\")\n\n 验证URL：\"^https?://([\\w-]+\\.)+[\\w-]+(/[\\w-./?%&=]*)?$\"\n 匹配空白行的正则表达式：\\n\\s*\\r\n\n 匹配腾讯QQ号：[1-9][0-9]{4,}\n ```\n 7.正则的方法\n ============\n ```JavaScript\n // 正则的方法\n // test 判断\n\n //eg\n var str='4567ssdsc85d 8s5s';\n var reg=/(\\d+)([a-z]*)/g;\n\n console.log(reg.test(str));//true;\n\n\n\n //exec  检索字符串中指定的值。返回找到的值，并确定其位置。\n //如果 exec() 找到了匹配的文本，\n // 则返回一个结果数组。\n // 否则，返回 null。\n // 此数组的第 0 个元素是与正则表达式相匹配的文本，\n // 第 1 个元素是与 RegExpObject 的第 1 个子表达式相匹配的文本（如果有的话），\n // 第 2 个元素是与 RegExpObject 的第 2 个子表达式相匹配的文本（如果有的话），\n // 以此类推。除了数组元素和 length 属性之外，exec() 方法还返回两个属性\n // 。index 属性声明的是匹配文本的第一个字符的位置。\n // input 属性则存放的是被检索的字符串 string。\n // 我们可以看得出，在调用非全局的 RegExp 对象的 exec() 方法时，\n // 返回的数组与调用方法 String.match() 返回的数组是相同的。\n console.log(reg.exec(str)); //[ '4567ssdsc','4567','ssdsc',index: 0,input: '4567ssdsc85d 8s5s' ]\n\n\n\n //compile 编译正则表达式。\n\n\n\n // str的方法\n // match 返回匹配的数组\n\n     console.log(str.match(reg));//[ '4567', '85', '8', '5' ]\n // replace() 方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。\n\n ```\n\n 8.replace\n ==========\n ```JavaScript\n // replace 替换\n\n var str='hello,world hello,bob'\n var str1=str.replace('h','H');\n console.log(str1) //Hello,world hello,bob\n\n var str2=str.replace(/h/,'H');\n console.log(str2) //Hello,world hello,bob\n //全局匹配查找并替换\n console.log(str.replace(/h/g,'H')) // Hello,world Hello,bob\n console.log(str.replace(/b/g,'$`')) //  ello,world hello,world ello,bob\n // leftContext\n // 是当前表达式模式最后一个匹配字符串左边的所有内容，\n // 可以简写为$`（其中\"'\"为键盘上\"Esc\"下边的反单引号）。\n // 初始值为空字符串\"\"。每次成功匹配时，其属性值都会随之改变。\n\n console.log(str.replace(/h/g,\"$'\"))\n ////rightContext\n // 是当前表达式模式最后一个匹配字符串右边的所有内容，可以简写为$'。\n // 初始值为空字符串\"\"。每次成功匹配时，其属性值都会随之改变。\n\n\n function replacer(match, p1, p2, p3, offset, string){\n\n     // match 匹配的字串（对应$&）\n     // p1, p2, ..假如replace()方法的第一个参数是一个RegExp 对象，则代表第n个括号匹配的字符串。（对应于上述的$1，$2等。）\n     // offset 匹配到的子字符串在原字符串中的偏移量。（比如，如果原字符串是\"abcd\"，匹配到的子字符串时\"bc\"，那么这个参数将时1）\n     // string被匹配的原字符串。\n\n     console.log(match); // abc12345#$*%\n     console.log(p1);    // abc\n     console.log(p2);    // 12345\n     console.log(p3);    // #$*%\n     console.log(string);// abc12345#$*%\n\n     return [p1, p2, p3].join(' - ');\n\n }\n\n var newString = 'abc12345#$*%'.replace(/([^\\d]*)(\\d*)([^\\w]*)/,replacer);\n\n\n //alert(newString);\n\n //////////////////////////////////\n\n /*\n  var re = /apples/gi;\n  var str = \"Apples are round, and apples are juicy.\";\n  var newstr = str.replace(re, \"oranges\");\n  */\n\n //alert(newstr);\n\n //////////////////////////////////\n\n /*var str = \"Apples are round, and apples are juicy.\";\n  var newstr = str.replace(\"apples\", \"oranges\", \"gi\");  // 这个不兼容IE\n  alert(newstr);*/\n\n\n //////////////////////////////////\n\n // 交换字符串中的两个单词\n /*var re = /(\\w+)\\s(\\w+)/;\n  var str = \"John Smith\";\n  var newstr = str.replace(re, \"$2 $1\");\n  alert(newstr);\n  */\n  ```\n\n  9.反向应用\n  =======\n\n\n  ```JavaScript\n\n  /**\n   * Created by Administrator on 2016/6/16.\n   */\n  // \\1，\\2 对序号为1和2的捕获组的反向引用\n\n  //“(a|b)\\1”在匹配“abaa”时，匹配成功，匹配到的结果是“aa”。\n  // “(a|b)”在尝试匹配时，虽然既可以匹配“a”，也可以匹配“b”，\n  // 但是在进行反向引用时，对应()中匹配的内容已经是固定的了。\n\n  var reg=/(a|b)\\1/g;\n  var reg2=/(a|b)(\\w)\\2/g;\n  var str='abaabbdsfsdfsd';\n  console.log(reg)\n\n  console.log(str.match(reg)); [ 'aa', 'bb' ]\n  console.log(str.match(reg2)) [ 'baa' ]\n  ```\n","slug":"regExp","published":1,"updated":"2016-06-20T10:06:07.000Z","layout":"post","photos":[],"link":"","_id":"cipq7e5p6000ag6u0mf6imv27","content":"<p>对正则的一些总结和简单应用<br><a id=\"more\"></a></p>\n<h1 id=\"1定义\"><a href=\"#1定义\" class=\"headerlink\" title=\"1定义\"></a>1定义</h1><pre>\n    var reg=/\\w+/g ;\n    var reg1=regExp('\\\\w+','g);\n</pre>\n\n<p>第一种定义方式 没有办法传参<br>第二种可以传参<br>一般不需要传参的话我一般用第一种定义正则</p>\n<h1 id=\"2-正则简单的基础\"><a href=\"#2-正则简单的基础\" class=\"headerlink\" title=\"2 正则简单的基础\"></a>2 正则简单的基础</h1><h2 id=\"2-1-开始符-amp-结束符\"><a href=\"#2-1-开始符-amp-结束符\" class=\"headerlink\" title=\"2.1 开始符&amp;结束符\"></a>2.1 开始符&amp;结束符</h2><p>^      匹配字符串的开头 如果设置了RegExp对象的Multiline属性， 也匹配\\n \\r 后的位置<br>$      匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“\\n”或“\\r”之前的位置。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/^\\w+/gm</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg1=<span class=\"regexp\">/^\\w+/g</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'sdasds1234523454\\nsadhdasdj'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr=str.match(reg);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr)<span class=\"comment\">//[ 'sdasds1234523454', 'sadhdasdj' ]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1=str.match(reg1);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr1)<span class=\"comment\">//['sdasds1234523454\\nsadhdasdj']</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-2量词\"><a href=\"#2-2量词\" class=\"headerlink\" title=\"2.2量词\"></a>2.2量词</h2> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> * 匹配前面的子表达式任意次。例如，zo*能匹配“z”，“zo”以及“zoo”，但是不匹配“bo”。*等价于&#123;<span class=\"number\">0</span>,&#125;</span><br><span class=\"line\"> + 匹配前面的子表达式至少一次 等价于 &#123;<span class=\"number\">1</span>,&#125;</span><br><span class=\"line\"> ? 可有可无 等价于&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;</span><br><span class=\"line\"> &#123;n&#125; n个</span><br><span class=\"line\">｛n,｝ 至少n个</span><br><span class=\"line\"> &#123;n,m&#125; n-m个</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-3字符缩写\"><a href=\"#2-3字符缩写\" class=\"headerlink\" title=\"2.3字符缩写\"></a>2.3字符缩写</h2> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> x|y 或的关系 等价于 [xy]</span><br><span class=\"line\">[^xy] 非xy</span><br><span class=\"line\">[a-z] a到 z</span><br><span class=\"line\"> [^a-z] 非 a-z</span><br><span class=\"line\"></span><br><span class=\"line\"> \\b 匹配一个单词边界，也就是指单词和空格间的位置（即正则表达式的“匹配”有两种概念，一种是匹配字符，一种是匹配位置，这里的\\b就是匹配位置的）。例如，“er\\b”可以匹配“never”中的“er”，但不能匹配“verb”中的“er”。</span><br><span class=\"line\"> \\B 匹配非单词边界。“er\\B”能匹配“verb”中的“er”，但不能匹配“never”中的“er”。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> \\d 匹配一个数字字符。等价于[<span class=\"number\">0</span><span class=\"number\">-9</span>]。grep 要加上-P，perl正则支持</span><br><span class=\"line\"> \\D 匹配一个非数字字符。等价于[^<span class=\"number\">0</span><span class=\"number\">-9</span>]。grep要加上-Pperl正则支持</span><br><span class=\"line\"> \\n 匹配一个换行符。等价于\\x0a和\\cJ。</span><br><span class=\"line\"> \\r 匹配一个回车符。等价于\\x0d和\\cM。</span><br><span class=\"line\"> \\s 匹配任何不可见字符，包括空格、制表符、换页符等等。等价于[ \\f\\n\\r\\t\\v]。</span><br><span class=\"line\"> \\S 匹配任何可见字符。等价于[^ \\f\\n\\r\\t\\v]。</span><br><span class=\"line\"> \\w 匹配包括下划线的任何单词字符。类似但不等价于“[A-Za-z0<span class=\"number\">-9</span>_]”，这里的<span class=\"string\">\"单词\"</span>字符使用Unicode字符集。</span><br><span class=\"line\"> \\W 匹配任何非单词字符。等价于“[^A-Za-z0<span class=\"number\">-9</span>_]”。</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-4-参数\"><a href=\"#2-4-参数\" class=\"headerlink\" title=\"2.4 参数\"></a>2.4 参数</h2><p>2.4.1 g<br>    g 只影响于 exec、match 方法。</p>\n<pre><code>若不指定 g，则：每次调用 exec 都只返回第一个匹配；match 也是只返回第一个匹配。\n\n若指定 g，则：每次调用 exec 都从上一个匹配之后查找新的匹配；match 则是返回所有的匹配。\n\n还有一种情况，就是使用 string 对象的 replace 方法时，指定 g 表示替换所有。\n</code></pre><p>2.4.2 i</p>\n<p>  参数 i 是指忽略大小写，注意仅是忽略大小写，并不忽略全半角。<br>2.4.3 m<br>    附加参数m，表明可以进行多行匹配，但是这个只有当使用^和$模式时才会起作用，在其他的模式中，加不加入m都可以进行多行匹配（其实说多行的字符串也是一个普通字符串）</p>\n<h1 id=\"3-贪婪非贪婪模式\"><a href=\"#3-贪婪非贪婪模式\" class=\"headerlink\" title=\" 3.贪婪非贪婪模式\"></a> 3.贪婪非贪婪模式</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? 当该字符紧跟在任何一个其他限制符</span><br><span class=\"line\"> （*,+,?，&#123;n&#125;，&#123;n,&#125;，&#123;n,m&#125;）后面时，</span><br><span class=\"line\"> 匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串</span><br><span class=\"line\"> ，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。</span><br><span class=\"line\"> 例如，对于字符串“oooo”，“o+?”将匹配单个“o”，</span><br><span class=\"line\"> 而“o+”将匹配所有“o”。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/[a-zA-Z]+?/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg1=<span class=\"regexp\">/[a-zA-Z]+/g</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'sasdqwew23q3e4a6s7d9asdas'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.match(reg));</span><br><span class=\"line\"><span class=\"comment\">//[ 's','a','s','d','q','w','e','w','q','e','a', 's'...]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.match(reg1));</span><br><span class=\"line\"><span class=\"comment\">//[ 'sasdqwew', 'q', 'e', 'a', 's', 'd', 'asdas' ]</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"4-点\"><a href=\"#4-点\" class=\"headerlink\" title=\" 4.点\"></a> 4.点</h1> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.点 匹配除“\\r\\n”之外的任何单个字符。要匹配包括“\\r\\n”在内的任何字符，请使用像“[\\s\\S]”的模式。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/.+/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg1=<span class=\"regexp\">/[\\s\\S]+/g</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'assdlk8554867486\\n\\rasdhuijk.lkashjdsadnlpo./'</span>.match(reg));</span><br><span class=\"line\"><span class=\"comment\">//[ 'assdlk8554867486', 'asdhuijk.lkashjdsadnlpo./' ]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'assdlk8554867486\\n\\rasdhuijk.lkashjdsadnlpo./'</span>.match(reg1));</span><br><span class=\"line\"><span class=\"comment\">//[ 'assdlk8554867486\\n\\rasdhuijk.lkashjdsadnlpo./' ]</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"5-捕获非捕获\"><a href=\"#5-捕获非捕获\" class=\"headerlink\" title=\"5.捕获非捕获\"></a>5.捕获非捕获</h1> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//(pattern) 匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“\\(”或“\\)”。</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//var reg=/([a-z]+)(\\d*)/g;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//var str='sdsda;;sdahj8202xdsa9fdsfsd5sdf12sfdsd';</span></span><br><span class=\"line\"><span class=\"comment\">//console.log(reg.test(str));//true</span></span><br><span class=\"line\"><span class=\"comment\">//console.log(RegExp.$1);//sdahj</span></span><br><span class=\"line\"><span class=\"comment\">//console.log(RegExp.$2);//8202</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// (?:pattern) 非获取匹配，匹配pattern但不获取匹配结果，不进行存储供以后使用。这在使用或字符“(|)”来组合一个模式的各个部分是很有用。例如“industr(?:y|ies)”就是一个比“industry|industries”更简略的表达式。</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//var reg=/([a-z]+)(?:8|\\d+)/g;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//console.log(str.match(reg));//[ 'sdahj8202', 'xdsa9', 'fdsfsd5', 'sdf12' ]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//(?=pattern)非获取匹配，正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串，该匹配不需要获取供以后使用。</span></span><br><span class=\"line\"><span class=\"comment\">// 例如，“Windows(?=95|98|NT|2000)”能匹配“Windows2000”中的“Windows”，</span></span><br><span class=\"line\"><span class=\"comment\">// 但不能匹配“Windows3.1”中的“Windows”。</span></span><br><span class=\"line\"><span class=\"comment\">// 预查不消耗字符，也就是说，</span></span><br><span class=\"line\"><span class=\"comment\">// 在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，</span></span><br><span class=\"line\"><span class=\"comment\">// 而不是从包含预查的字符之后开始。</span></span><br><span class=\"line\"><span class=\"comment\">//var reg1=/([a-z]+)(?=\\d+)/g;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//console.log(str.match(reg1)); //[ 'sdahj', 'xdsa', 'fdsfsd', 'sdf' ]</span></span><br><span class=\"line\"><span class=\"comment\">//(?!pattern)非获取匹配，正向否定预查，</span></span><br><span class=\"line\"><span class=\"comment\">// 在任何不匹配pattern的字符串开始处匹配查找字符串，</span></span><br><span class=\"line\"><span class=\"comment\">// 该匹配不需要获取供以后使用。例如“Windows(?!95|98|NT|2000)”</span></span><br><span class=\"line\"><span class=\"comment\">// 能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"6-常用正则\"><a href=\"#6-常用正则\" class=\"headerlink\" title=\" 6.常用正则\"></a> 6.常用正则</h1> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">验证手机号码：<span class=\"string\">\"^1[3|4|5|7|8][0-9]\\\\d&#123;8&#125;$\"</span></span><br><span class=\"line\">验证身份证号（<span class=\"number\">15</span>位或<span class=\"number\">18</span>位数字）：<span class=\"string\">\"\\\\d&#123;14&#125;[[0-9],0-9xX]\"</span></span><br><span class=\"line\">验证Email地址：(<span class=\"string\">\"^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">验证URL：<span class=\"string\">\"^https?://([\\w-]+\\.)+[\\w-]+(/[\\w-./?%&amp;=]*)?$\"</span></span><br><span class=\"line\">匹配空白行的正则表达式：\\n\\s*\\r</span><br><span class=\"line\"></span><br><span class=\"line\">匹配腾讯QQ号：[<span class=\"number\">1</span><span class=\"number\">-9</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">4</span>,&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"7-正则的方法\"><a href=\"#7-正则的方法\" class=\"headerlink\" title=\" 7.正则的方法\"></a> 7.正则的方法</h1> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正则的方法</span></span><br><span class=\"line\"><span class=\"comment\">// test 判断</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//eg</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'4567ssdsc85d 8s5s'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/(\\d+)([a-z]*)/g</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.test(str));<span class=\"comment\">//true;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//exec  检索字符串中指定的值。返回找到的值，并确定其位置。</span></span><br><span class=\"line\"><span class=\"comment\">//如果 exec() 找到了匹配的文本，</span></span><br><span class=\"line\"><span class=\"comment\">// 则返回一个结果数组。</span></span><br><span class=\"line\"><span class=\"comment\">// 否则，返回 null。</span></span><br><span class=\"line\"><span class=\"comment\">// 此数组的第 0 个元素是与正则表达式相匹配的文本，</span></span><br><span class=\"line\"><span class=\"comment\">// 第 1 个元素是与 RegExpObject 的第 1 个子表达式相匹配的文本（如果有的话），</span></span><br><span class=\"line\"><span class=\"comment\">// 第 2 个元素是与 RegExpObject 的第 2 个子表达式相匹配的文本（如果有的话），</span></span><br><span class=\"line\"><span class=\"comment\">// 以此类推。除了数组元素和 length 属性之外，exec() 方法还返回两个属性</span></span><br><span class=\"line\"><span class=\"comment\">// 。index 属性声明的是匹配文本的第一个字符的位置。</span></span><br><span class=\"line\"><span class=\"comment\">// input 属性则存放的是被检索的字符串 string。</span></span><br><span class=\"line\"><span class=\"comment\">// 我们可以看得出，在调用非全局的 RegExp 对象的 exec() 方法时，</span></span><br><span class=\"line\"><span class=\"comment\">// 返回的数组与调用方法 String.match() 返回的数组是相同的。</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.exec(str)); <span class=\"comment\">//[ '4567ssdsc','4567','ssdsc',index: 0,input: '4567ssdsc85d 8s5s' ]</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//compile 编译正则表达式。</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// str的方法</span></span><br><span class=\"line\"><span class=\"comment\">// match 返回匹配的数组</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(str.match(reg));<span class=\"comment\">//[ '4567', '85', '8', '5' ]</span></span><br><span class=\"line\"><span class=\"comment\">// replace() 方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"8-replace\"><a href=\"#8-replace\" class=\"headerlink\" title=\" 8.replace\"></a> 8.replace</h1> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// replace 替换</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'hello,world hello,bob'</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str1=str.replace(<span class=\"string\">'h'</span>,<span class=\"string\">'H'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str1) <span class=\"comment\">//Hello,world hello,bob</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> str2=str.replace(<span class=\"regexp\">/h/</span>,<span class=\"string\">'H'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str2) <span class=\"comment\">//Hello,world hello,bob</span></span><br><span class=\"line\"><span class=\"comment\">//全局匹配查找并替换</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.replace(<span class=\"regexp\">/h/g</span>,<span class=\"string\">'H'</span>)) <span class=\"comment\">// Hello,world Hello,bob</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.replace(<span class=\"regexp\">/b/g</span>,<span class=\"string\">'$`'</span>)) <span class=\"comment\">//  ello,world hello,world ello,bob</span></span><br><span class=\"line\"><span class=\"comment\">// leftContext</span></span><br><span class=\"line\"><span class=\"comment\">// 是当前表达式模式最后一个匹配字符串左边的所有内容，</span></span><br><span class=\"line\"><span class=\"comment\">// 可以简写为$`（其中\"'\"为键盘上\"Esc\"下边的反单引号）。</span></span><br><span class=\"line\"><span class=\"comment\">// 初始值为空字符串\"\"。每次成功匹配时，其属性值都会随之改变。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.replace(<span class=\"regexp\">/h/g</span>,<span class=\"string\">\"$'\"</span>))</span><br><span class=\"line\"><span class=\"comment\">////rightContext</span></span><br><span class=\"line\"><span class=\"comment\">// 是当前表达式模式最后一个匹配字符串右边的所有内容，可以简写为$'。</span></span><br><span class=\"line\"><span class=\"comment\">// 初始值为空字符串\"\"。每次成功匹配时，其属性值都会随之改变。</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">replacer</span>(<span class=\"params\">match, p1, p2, p3, offset, string</span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// match 匹配的字串（对应$&amp;）</span></span><br><span class=\"line\">    <span class=\"comment\">// p1, p2, ..假如replace()方法的第一个参数是一个RegExp 对象，则代表第n个括号匹配的字符串。（对应于上述的$1，$2等。）</span></span><br><span class=\"line\">    <span class=\"comment\">// offset 匹配到的子字符串在原字符串中的偏移量。（比如，如果原字符串是\"abcd\"，匹配到的子字符串时\"bc\"，那么这个参数将时1）</span></span><br><span class=\"line\">    <span class=\"comment\">// string被匹配的原字符串。</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(match); <span class=\"comment\">// abc12345#$*%</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(p1);    <span class=\"comment\">// abc</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(p2);    <span class=\"comment\">// 12345</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(p3);    <span class=\"comment\">// #$*%</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(string);<span class=\"comment\">// abc12345#$*%</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [p1, p2, p3].join(<span class=\"string\">' - '</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> newString = <span class=\"string\">'abc12345#$*%'</span>.replace(<span class=\"regexp\">/([^\\d]*)(\\d*)([^\\w]*)/</span>,replacer);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//alert(newString);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//////////////////////////////////</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\"> var re = /apples/gi;</span><br><span class=\"line\"> var str = \"Apples are round, and apples are juicy.\";</span><br><span class=\"line\"> var newstr = str.replace(re, \"oranges\");</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//alert(newstr);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//////////////////////////////////</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*var str = \"Apples are round, and apples are juicy.\";</span><br><span class=\"line\"> var newstr = str.replace(\"apples\", \"oranges\", \"gi\");  // 这个不兼容IE</span><br><span class=\"line\"> alert(newstr);*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//////////////////////////////////</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 交换字符串中的两个单词</span></span><br><span class=\"line\"><span class=\"comment\">/*var re = /(\\w+)\\s(\\w+)/;</span><br><span class=\"line\"> var str = \"John Smith\";</span><br><span class=\"line\"> var newstr = str.replace(re, \"$2 $1\");</span><br><span class=\"line\"> alert(newstr);</span><br><span class=\"line\"> */</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"9-反向应用\"><a href=\"#9-反向应用\" class=\"headerlink\" title=\"  9.反向应用\"></a>  9.反向应用</h1>  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * Created by Administrator on 2016/6/16.</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"comment\">// \\1，\\2 对序号为1和2的捕获组的反向引用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//“(a|b)\\1”在匹配“abaa”时，匹配成功，匹配到的结果是“aa”。</span></span><br><span class=\"line\"><span class=\"comment\">// “(a|b)”在尝试匹配时，虽然既可以匹配“a”，也可以匹配“b”，</span></span><br><span class=\"line\"><span class=\"comment\">// 但是在进行反向引用时，对应()中匹配的内容已经是固定的了。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/(a|b)\\1/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg2=<span class=\"regexp\">/(a|b)(\\w)\\2/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abaabbdsfsdfsd'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.match(reg)); [ <span class=\"string\">'aa'</span>, <span class=\"string\">'bb'</span> ]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.match(reg2)) [ <span class=\"string\">'baa'</span> ]</span><br></pre></td></tr></table></figure>\n","excerpt":"<p>对正则的一些总结和简单应用<br>","more":"</p>\n<h1 id=\"1定义\"><a href=\"#1定义\" class=\"headerlink\" title=\"1定义\"></a>1定义</h1><pre>\n    var reg=/\\w+/g ;\n    var reg1=regExp('\\\\w+','g);\n</pre>\n\n<p>第一种定义方式 没有办法传参<br>第二种可以传参<br>一般不需要传参的话我一般用第一种定义正则</p>\n<h1 id=\"2-正则简单的基础\"><a href=\"#2-正则简单的基础\" class=\"headerlink\" title=\"2 正则简单的基础\"></a>2 正则简单的基础</h1><h2 id=\"2-1-开始符-amp-结束符\"><a href=\"#2-1-开始符-amp-结束符\" class=\"headerlink\" title=\"2.1 开始符&amp;结束符\"></a>2.1 开始符&amp;结束符</h2><p>^      匹配字符串的开头 如果设置了RegExp对象的Multiline属性， 也匹配\\n \\r 后的位置<br>$      匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“\\n”或“\\r”之前的位置。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/^\\w+/gm</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg1=<span class=\"regexp\">/^\\w+/g</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'sdasds1234523454\\nsadhdasdj'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> arr=str.match(reg);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr)<span class=\"comment\">//[ 'sdasds1234523454', 'sadhdasdj' ]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> arr1=str.match(reg1);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(arr1)<span class=\"comment\">//['sdasds1234523454\\nsadhdasdj']</span></span><br></pre></td></tr></table></figure></p>\n<h2 id=\"2-2量词\"><a href=\"#2-2量词\" class=\"headerlink\" title=\"2.2量词\"></a>2.2量词</h2> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> * 匹配前面的子表达式任意次。例如，zo*能匹配“z”，“zo”以及“zoo”，但是不匹配“bo”。*等价于&#123;<span class=\"number\">0</span>,&#125;</span><br><span class=\"line\"> + 匹配前面的子表达式至少一次 等价于 &#123;<span class=\"number\">1</span>,&#125;</span><br><span class=\"line\"> ? 可有可无 等价于&#123;<span class=\"number\">0</span>,<span class=\"number\">1</span>&#125;</span><br><span class=\"line\"> &#123;n&#125; n个</span><br><span class=\"line\">｛n,｝ 至少n个</span><br><span class=\"line\"> &#123;n,m&#125; n-m个</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-3字符缩写\"><a href=\"#2-3字符缩写\" class=\"headerlink\" title=\"2.3字符缩写\"></a>2.3字符缩写</h2> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> x|y 或的关系 等价于 [xy]</span><br><span class=\"line\">[^xy] 非xy</span><br><span class=\"line\">[a-z] a到 z</span><br><span class=\"line\"> [^a-z] 非 a-z</span><br><span class=\"line\"></span><br><span class=\"line\"> \\b 匹配一个单词边界，也就是指单词和空格间的位置（即正则表达式的“匹配”有两种概念，一种是匹配字符，一种是匹配位置，这里的\\b就是匹配位置的）。例如，“er\\b”可以匹配“never”中的“er”，但不能匹配“verb”中的“er”。</span><br><span class=\"line\"> \\B 匹配非单词边界。“er\\B”能匹配“verb”中的“er”，但不能匹配“never”中的“er”。</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"> \\d 匹配一个数字字符。等价于[<span class=\"number\">0</span><span class=\"number\">-9</span>]。grep 要加上-P，perl正则支持</span><br><span class=\"line\"> \\D 匹配一个非数字字符。等价于[^<span class=\"number\">0</span><span class=\"number\">-9</span>]。grep要加上-Pperl正则支持</span><br><span class=\"line\"> \\n 匹配一个换行符。等价于\\x0a和\\cJ。</span><br><span class=\"line\"> \\r 匹配一个回车符。等价于\\x0d和\\cM。</span><br><span class=\"line\"> \\s 匹配任何不可见字符，包括空格、制表符、换页符等等。等价于[ \\f\\n\\r\\t\\v]。</span><br><span class=\"line\"> \\S 匹配任何可见字符。等价于[^ \\f\\n\\r\\t\\v]。</span><br><span class=\"line\"> \\w 匹配包括下划线的任何单词字符。类似但不等价于“[A-Za-z0<span class=\"number\">-9</span>_]”，这里的<span class=\"string\">\"单词\"</span>字符使用Unicode字符集。</span><br><span class=\"line\"> \\W 匹配任何非单词字符。等价于“[^A-Za-z0<span class=\"number\">-9</span>_]”。</span><br></pre></td></tr></table></figure>\n<h2 id=\"2-4-参数\"><a href=\"#2-4-参数\" class=\"headerlink\" title=\"2.4 参数\"></a>2.4 参数</h2><p>2.4.1 g<br>    g 只影响于 exec、match 方法。</p>\n<pre><code>若不指定 g，则：每次调用 exec 都只返回第一个匹配；match 也是只返回第一个匹配。\n\n若指定 g，则：每次调用 exec 都从上一个匹配之后查找新的匹配；match 则是返回所有的匹配。\n\n还有一种情况，就是使用 string 对象的 replace 方法时，指定 g 表示替换所有。\n</code></pre><p>2.4.2 i</p>\n<p>  参数 i 是指忽略大小写，注意仅是忽略大小写，并不忽略全半角。<br>2.4.3 m<br>    附加参数m，表明可以进行多行匹配，但是这个只有当使用^和$模式时才会起作用，在其他的模式中，加不加入m都可以进行多行匹配（其实说多行的字符串也是一个普通字符串）</p>\n<h1 id=\"3-贪婪非贪婪模式\"><a href=\"#3-贪婪非贪婪模式\" class=\"headerlink\" title=\" 3.贪婪非贪婪模式\"></a> 3.贪婪非贪婪模式</h1><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">? 当该字符紧跟在任何一个其他限制符</span><br><span class=\"line\"> （*,+,?，&#123;n&#125;，&#123;n,&#125;，&#123;n,m&#125;）后面时，</span><br><span class=\"line\"> 匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串</span><br><span class=\"line\"> ，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。</span><br><span class=\"line\"> 例如，对于字符串“oooo”，“o+?”将匹配单个“o”，</span><br><span class=\"line\"> 而“o+”将匹配所有“o”。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/[a-zA-Z]+?/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg1=<span class=\"regexp\">/[a-zA-Z]+/g</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'sasdqwew23q3e4a6s7d9asdas'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.match(reg));</span><br><span class=\"line\"><span class=\"comment\">//[ 's','a','s','d','q','w','e','w','q','e','a', 's'...]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.match(reg1));</span><br><span class=\"line\"><span class=\"comment\">//[ 'sasdqwew', 'q', 'e', 'a', 's', 'd', 'asdas' ]</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"4-点\"><a href=\"#4-点\" class=\"headerlink\" title=\" 4.点\"></a> 4.点</h1> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">.点 匹配除“\\r\\n”之外的任何单个字符。要匹配包括“\\r\\n”在内的任何字符，请使用像“[\\s\\S]”的模式。</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/.+/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg1=<span class=\"regexp\">/[\\s\\S]+/g</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'assdlk8554867486\\n\\rasdhuijk.lkashjdsadnlpo./'</span>.match(reg));</span><br><span class=\"line\"><span class=\"comment\">//[ 'assdlk8554867486', 'asdhuijk.lkashjdsadnlpo./' ]</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(<span class=\"string\">'assdlk8554867486\\n\\rasdhuijk.lkashjdsadnlpo./'</span>.match(reg1));</span><br><span class=\"line\"><span class=\"comment\">//[ 'assdlk8554867486\\n\\rasdhuijk.lkashjdsadnlpo./' ]</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"5-捕获非捕获\"><a href=\"#5-捕获非捕获\" class=\"headerlink\" title=\"5.捕获非捕获\"></a>5.捕获非捕获</h1> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//(pattern) 匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“\\(”或“\\)”。</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//var reg=/([a-z]+)(\\d*)/g;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//var str='sdsda;;sdahj8202xdsa9fdsfsd5sdf12sfdsd';</span></span><br><span class=\"line\"><span class=\"comment\">//console.log(reg.test(str));//true</span></span><br><span class=\"line\"><span class=\"comment\">//console.log(RegExp.$1);//sdahj</span></span><br><span class=\"line\"><span class=\"comment\">//console.log(RegExp.$2);//8202</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// (?:pattern) 非获取匹配，匹配pattern但不获取匹配结果，不进行存储供以后使用。这在使用或字符“(|)”来组合一个模式的各个部分是很有用。例如“industr(?:y|ies)”就是一个比“industry|industries”更简略的表达式。</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//var reg=/([a-z]+)(?:8|\\d+)/g;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//console.log(str.match(reg));//[ 'sdahj8202', 'xdsa9', 'fdsfsd5', 'sdf12' ]</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//(?=pattern)非获取匹配，正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串，该匹配不需要获取供以后使用。</span></span><br><span class=\"line\"><span class=\"comment\">// 例如，“Windows(?=95|98|NT|2000)”能匹配“Windows2000”中的“Windows”，</span></span><br><span class=\"line\"><span class=\"comment\">// 但不能匹配“Windows3.1”中的“Windows”。</span></span><br><span class=\"line\"><span class=\"comment\">// 预查不消耗字符，也就是说，</span></span><br><span class=\"line\"><span class=\"comment\">// 在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，</span></span><br><span class=\"line\"><span class=\"comment\">// 而不是从包含预查的字符之后开始。</span></span><br><span class=\"line\"><span class=\"comment\">//var reg1=/([a-z]+)(?=\\d+)/g;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//console.log(str.match(reg1)); //[ 'sdahj', 'xdsa', 'fdsfsd', 'sdf' ]</span></span><br><span class=\"line\"><span class=\"comment\">//(?!pattern)非获取匹配，正向否定预查，</span></span><br><span class=\"line\"><span class=\"comment\">// 在任何不匹配pattern的字符串开始处匹配查找字符串，</span></span><br><span class=\"line\"><span class=\"comment\">// 该匹配不需要获取供以后使用。例如“Windows(?!95|98|NT|2000)”</span></span><br><span class=\"line\"><span class=\"comment\">// 能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"6-常用正则\"><a href=\"#6-常用正则\" class=\"headerlink\" title=\" 6.常用正则\"></a> 6.常用正则</h1> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">验证手机号码：<span class=\"string\">\"^1[3|4|5|7|8][0-9]\\\\d&#123;8&#125;$\"</span></span><br><span class=\"line\">验证身份证号（<span class=\"number\">15</span>位或<span class=\"number\">18</span>位数字）：<span class=\"string\">\"\\\\d&#123;14&#125;[[0-9],0-9xX]\"</span></span><br><span class=\"line\">验证Email地址：(<span class=\"string\">\"^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">验证URL：<span class=\"string\">\"^https?://([\\w-]+\\.)+[\\w-]+(/[\\w-./?%&amp;=]*)?$\"</span></span><br><span class=\"line\">匹配空白行的正则表达式：\\n\\s*\\r</span><br><span class=\"line\"></span><br><span class=\"line\">匹配腾讯QQ号：[<span class=\"number\">1</span><span class=\"number\">-9</span>][<span class=\"number\">0</span><span class=\"number\">-9</span>]&#123;<span class=\"number\">4</span>,&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"7-正则的方法\"><a href=\"#7-正则的方法\" class=\"headerlink\" title=\" 7.正则的方法\"></a> 7.正则的方法</h1> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 正则的方法</span></span><br><span class=\"line\"><span class=\"comment\">// test 判断</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//eg</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'4567ssdsc85d 8s5s'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/(\\d+)([a-z]*)/g</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.test(str));<span class=\"comment\">//true;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//exec  检索字符串中指定的值。返回找到的值，并确定其位置。</span></span><br><span class=\"line\"><span class=\"comment\">//如果 exec() 找到了匹配的文本，</span></span><br><span class=\"line\"><span class=\"comment\">// 则返回一个结果数组。</span></span><br><span class=\"line\"><span class=\"comment\">// 否则，返回 null。</span></span><br><span class=\"line\"><span class=\"comment\">// 此数组的第 0 个元素是与正则表达式相匹配的文本，</span></span><br><span class=\"line\"><span class=\"comment\">// 第 1 个元素是与 RegExpObject 的第 1 个子表达式相匹配的文本（如果有的话），</span></span><br><span class=\"line\"><span class=\"comment\">// 第 2 个元素是与 RegExpObject 的第 2 个子表达式相匹配的文本（如果有的话），</span></span><br><span class=\"line\"><span class=\"comment\">// 以此类推。除了数组元素和 length 属性之外，exec() 方法还返回两个属性</span></span><br><span class=\"line\"><span class=\"comment\">// 。index 属性声明的是匹配文本的第一个字符的位置。</span></span><br><span class=\"line\"><span class=\"comment\">// input 属性则存放的是被检索的字符串 string。</span></span><br><span class=\"line\"><span class=\"comment\">// 我们可以看得出，在调用非全局的 RegExp 对象的 exec() 方法时，</span></span><br><span class=\"line\"><span class=\"comment\">// 返回的数组与调用方法 String.match() 返回的数组是相同的。</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg.exec(str)); <span class=\"comment\">//[ '4567ssdsc','4567','ssdsc',index: 0,input: '4567ssdsc85d 8s5s' ]</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//compile 编译正则表达式。</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// str的方法</span></span><br><span class=\"line\"><span class=\"comment\">// match 返回匹配的数组</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(str.match(reg));<span class=\"comment\">//[ '4567', '85', '8', '5' ]</span></span><br><span class=\"line\"><span class=\"comment\">// replace() 方法用于在字符串中用一些字符替换另一些字符，或替换一个与正则表达式匹配的子串。</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"8-replace\"><a href=\"#8-replace\" class=\"headerlink\" title=\" 8.replace\"></a> 8.replace</h1> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// replace 替换</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'hello,world hello,bob'</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> str1=str.replace(<span class=\"string\">'h'</span>,<span class=\"string\">'H'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str1) <span class=\"comment\">//Hello,world hello,bob</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> str2=str.replace(<span class=\"regexp\">/h/</span>,<span class=\"string\">'H'</span>);</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str2) <span class=\"comment\">//Hello,world hello,bob</span></span><br><span class=\"line\"><span class=\"comment\">//全局匹配查找并替换</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.replace(<span class=\"regexp\">/h/g</span>,<span class=\"string\">'H'</span>)) <span class=\"comment\">// Hello,world Hello,bob</span></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.replace(<span class=\"regexp\">/b/g</span>,<span class=\"string\">'$`'</span>)) <span class=\"comment\">//  ello,world hello,world ello,bob</span></span><br><span class=\"line\"><span class=\"comment\">// leftContext</span></span><br><span class=\"line\"><span class=\"comment\">// 是当前表达式模式最后一个匹配字符串左边的所有内容，</span></span><br><span class=\"line\"><span class=\"comment\">// 可以简写为$`（其中\"'\"为键盘上\"Esc\"下边的反单引号）。</span></span><br><span class=\"line\"><span class=\"comment\">// 初始值为空字符串\"\"。每次成功匹配时，其属性值都会随之改变。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.replace(<span class=\"regexp\">/h/g</span>,<span class=\"string\">\"$'\"</span>))</span><br><span class=\"line\"><span class=\"comment\">////rightContext</span></span><br><span class=\"line\"><span class=\"comment\">// 是当前表达式模式最后一个匹配字符串右边的所有内容，可以简写为$'。</span></span><br><span class=\"line\"><span class=\"comment\">// 初始值为空字符串\"\"。每次成功匹配时，其属性值都会随之改变。</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">replacer</span>(<span class=\"params\">match, p1, p2, p3, offset, string</span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// match 匹配的字串（对应$&amp;）</span></span><br><span class=\"line\">    <span class=\"comment\">// p1, p2, ..假如replace()方法的第一个参数是一个RegExp 对象，则代表第n个括号匹配的字符串。（对应于上述的$1，$2等。）</span></span><br><span class=\"line\">    <span class=\"comment\">// offset 匹配到的子字符串在原字符串中的偏移量。（比如，如果原字符串是\"abcd\"，匹配到的子字符串时\"bc\"，那么这个参数将时1）</span></span><br><span class=\"line\">    <span class=\"comment\">// string被匹配的原字符串。</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(match); <span class=\"comment\">// abc12345#$*%</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(p1);    <span class=\"comment\">// abc</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(p2);    <span class=\"comment\">// 12345</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(p3);    <span class=\"comment\">// #$*%</span></span><br><span class=\"line\">    <span class=\"built_in\">console</span>.log(string);<span class=\"comment\">// abc12345#$*%</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> [p1, p2, p3].join(<span class=\"string\">' - '</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> newString = <span class=\"string\">'abc12345#$*%'</span>.replace(<span class=\"regexp\">/([^\\d]*)(\\d*)([^\\w]*)/</span>,replacer);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//alert(newString);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//////////////////////////////////</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span><br><span class=\"line\"> var re = /apples/gi;</span><br><span class=\"line\"> var str = \"Apples are round, and apples are juicy.\";</span><br><span class=\"line\"> var newstr = str.replace(re, \"oranges\");</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//alert(newstr);</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//////////////////////////////////</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*var str = \"Apples are round, and apples are juicy.\";</span><br><span class=\"line\"> var newstr = str.replace(\"apples\", \"oranges\", \"gi\");  // 这个不兼容IE</span><br><span class=\"line\"> alert(newstr);*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//////////////////////////////////</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 交换字符串中的两个单词</span></span><br><span class=\"line\"><span class=\"comment\">/*var re = /(\\w+)\\s(\\w+)/;</span><br><span class=\"line\"> var str = \"John Smith\";</span><br><span class=\"line\"> var newstr = str.replace(re, \"$2 $1\");</span><br><span class=\"line\"> alert(newstr);</span><br><span class=\"line\"> */</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"9-反向应用\"><a href=\"#9-反向应用\" class=\"headerlink\" title=\"  9.反向应用\"></a>  9.反向应用</h1>  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span><br><span class=\"line\"> * Created by Administrator on 2016/6/16.</span><br><span class=\"line\"> */</span></span><br><span class=\"line\"><span class=\"comment\">// \\1，\\2 对序号为1和2的捕获组的反向引用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//“(a|b)\\1”在匹配“abaa”时，匹配成功，匹配到的结果是“aa”。</span></span><br><span class=\"line\"><span class=\"comment\">// “(a|b)”在尝试匹配时，虽然既可以匹配“a”，也可以匹配“b”，</span></span><br><span class=\"line\"><span class=\"comment\">// 但是在进行反向引用时，对应()中匹配的内容已经是固定的了。</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> reg=<span class=\"regexp\">/(a|b)\\1/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> reg2=<span class=\"regexp\">/(a|b)(\\w)\\2/g</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> str=<span class=\"string\">'abaabbdsfsdfsd'</span>;</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(reg)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.match(reg)); [ <span class=\"string\">'aa'</span>, <span class=\"string\">'bb'</span> ]</span><br><span class=\"line\"><span class=\"built_in\">console</span>.log(str.match(reg2)) [ <span class=\"string\">'baa'</span> ]</span><br></pre></td></tr></table></figure>"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cipq7e5nw0001g6u0khyojmyq","tag_id":"cipq7e5ol0005g6u0jnl016ac","_id":"cipq7e5pa000bg6u0hx9hxly9"},{"post_id":"cipq7e5ob0003g6u0p8riuyq4","tag_id":"cipq7e5p50009g6u01hc0tnrf","_id":"cipq7e5q8000eg6u0bo50w6bf"},{"post_id":"cipq7e5ob0003g6u0p8riuyq4","tag_id":"cipq7e5pd000cg6u0tymw6k1u","_id":"cipq7e5q9000fg6u0gfvmgsxu"},{"post_id":"cipq7e5oq0006g6u0cj721z4h","tag_id":"cipq7e5ol0005g6u0jnl016ac","_id":"cipq7e5qd000ig6u0n1t9eofs"},{"post_id":"cipq7e5oq0006g6u0cj721z4h","tag_id":"cipq7e5p50009g6u01hc0tnrf","_id":"cipq7e5qd000jg6u0tp872ymm"},{"post_id":"cipq7e5oy0008g6u02dznek0k","tag_id":"cipq7e5qc000hg6u0mpubyw8b","_id":"cipq7e5qf000lg6u0nxut4dog"},{"post_id":"cipq7e5p6000ag6u0mf6imv27","tag_id":"cipq7e5qe000kg6u0dksu2axr","_id":"cipq7e5qk000og6u0w3soj8e2"},{"post_id":"cipq7e5p6000ag6u0mf6imv27","tag_id":"cipq7e5qg000mg6u0oklmir2v","_id":"cipq7e5ql000pg6u0lstto9yy"},{"post_id":"cipq7e5p6000ag6u0mf6imv27","tag_id":"cipq7e5pd000cg6u0tymw6k1u","_id":"cipq7e5ql000qg6u0n3k3t89m"}],"Tag":[{"name":"hexo","_id":"cipq7e5ol0005g6u0jnl016ac"},{"name":"git","_id":"cipq7e5p50009g6u01hc0tnrf"},{"name":"js","_id":"cipq7e5pd000cg6u0tymw6k1u"},{"name":"markdown","_id":"cipq7e5qc000hg6u0mpubyw8b"},{"name":"regRxp","_id":"cipq7e5qe000kg6u0dksu2axr"},{"name":"正则","_id":"cipq7e5qg000mg6u0oklmir2v"}]}}